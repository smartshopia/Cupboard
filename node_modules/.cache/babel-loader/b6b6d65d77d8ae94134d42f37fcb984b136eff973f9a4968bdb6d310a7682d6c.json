{"ast":null,"code":"/*! firebase-admin v12.2.0 */\n\"use strict\";\n\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceIdClientErrorCode = exports.InstallationsClientErrorCode = exports.MessagingClientErrorCode = exports.AuthClientErrorCode = exports.AppErrorCodes = exports.FirebaseProjectManagementError = exports.FirebaseMessagingError = exports.FirebaseInstallationsError = exports.FirebaseInstanceIdError = exports.FirebaseFirestoreError = exports.FirebaseDatabaseError = exports.FirebaseAuthError = exports.FirebaseAppError = exports.PrefixedFirebaseError = exports.FirebaseError = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n * Firebase error code structure. This extends Error.\n */\nclass FirebaseError extends Error {\n  /**\n   * @param errorInfo - The error information (code and message).\n   * @constructor\n   * @internal\n   */\n  constructor(errorInfo) {\n    super(errorInfo.message);\n    this.errorInfo = errorInfo;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = FirebaseError.prototype;\n  }\n  /** @returns The error code. */\n  get code() {\n    return this.errorInfo?.code;\n  }\n  /** @returns The error message. */\n  get message() {\n    return this.errorInfo?.message;\n  }\n  /** @returns The object representation of the error. */\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message\n    };\n  }\n}\nexports.FirebaseError = FirebaseError;\n/**\n * A FirebaseError with a prefix in front of the error code.\n */\nclass PrefixedFirebaseError extends FirebaseError {\n  /**\n   * @param codePrefix - The prefix to apply to the error code.\n   * @param code - The error code.\n   * @param message - The error message.\n   * @constructor\n   * @internal\n   */\n  constructor(codePrefix, code, message) {\n    super({\n      code: `${codePrefix}/${code}`,\n      message\n    });\n    this.codePrefix = codePrefix;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = PrefixedFirebaseError.prototype;\n  }\n  /**\n   * Allows the error type to be checked without needing to know implementation details\n   * of the code prefixing.\n   *\n   * @param code - The non-prefixed error code to test against.\n   * @returns True if the code matches, false otherwise.\n   */\n  hasCode(code) {\n    return `${this.codePrefix}/${code}` === this.code;\n  }\n}\nexports.PrefixedFirebaseError = PrefixedFirebaseError;\n/**\n * Firebase App error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAppError extends PrefixedFirebaseError {\n  /**\n   * @param code - The error code.\n   * @param message - The error message.\n   * @constructor\n   * @internal\n   */\n  constructor(code, message) {\n    super('app', code, message);\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = FirebaseAppError.prototype;\n  }\n}\nexports.FirebaseAppError = FirebaseAppError;\n/**\n * Firebase Auth error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAuthError extends PrefixedFirebaseError {\n  /**\n   * Creates the developer-facing error corresponding to the backend error code.\n   *\n   * @param serverErrorCode - The server error code.\n   * @param [message] The error message. The default message is used\n   *     if not provided.\n   * @param [rawServerResponse] The error's raw server response.\n   * @returns The corresponding developer-facing error.\n   * @internal\n   */\n  static fromServerError(serverErrorCode, message, rawServerResponse) {\n    // serverErrorCode could contain additional details:\n    // ERROR_CODE : Detailed message which can also contain colons\n    const colonSeparator = (serverErrorCode || '').indexOf(':');\n    let customMessage = null;\n    if (colonSeparator !== -1) {\n      customMessage = serverErrorCode.substring(colonSeparator + 1).trim();\n      serverErrorCode = serverErrorCode.substring(0, colonSeparator).trim();\n    }\n    // If not found, default to internal error.\n    const clientCodeKey = AUTH_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'INTERNAL_ERROR';\n    const error = (0, deep_copy_1.deepCopy)(AuthClientErrorCode[clientCodeKey]);\n    // Server detailed message should have highest priority.\n    error.message = customMessage || message || error.message;\n    if (clientCodeKey === 'INTERNAL_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n      } catch (e) {\n        // Ignore JSON parsing error.\n      }\n    }\n    return new FirebaseAuthError(error);\n  }\n  /**\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super('auth', info.code, message || info.message);\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = FirebaseAuthError.prototype;\n  }\n}\nexports.FirebaseAuthError = FirebaseAuthError;\n/**\n * Firebase Database error code structure. This extends FirebaseError.\n */\nclass FirebaseDatabaseError extends FirebaseError {\n  /**\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default\n   *     message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super({\n      code: 'database/' + info.code,\n      message: message || info.message\n    });\n  }\n}\nexports.FirebaseDatabaseError = FirebaseDatabaseError;\n/**\n * Firebase Firestore error code structure. This extends FirebaseError.\n */\nclass FirebaseFirestoreError extends FirebaseError {\n  /**\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default\n   *     message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super({\n      code: 'firestore/' + info.code,\n      message: message || info.message\n    });\n  }\n}\nexports.FirebaseFirestoreError = FirebaseFirestoreError;\n/**\n * Firebase instance ID error code structure. This extends FirebaseError.\n */\nclass FirebaseInstanceIdError extends FirebaseError {\n  /**\n   *\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default\n   *     message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super({\n      code: 'instance-id/' + info.code,\n      message: message || info.message\n    });\n    this.__proto__ = FirebaseInstanceIdError.prototype;\n  }\n}\nexports.FirebaseInstanceIdError = FirebaseInstanceIdError;\n/**\n * Firebase Installations service error code structure. This extends `FirebaseError`.\n */\nclass FirebaseInstallationsError extends FirebaseError {\n  /**\n   *\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default\n   *     message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super({\n      code: 'installations/' + info.code,\n      message: message || info.message\n    });\n    this.__proto__ = FirebaseInstallationsError.prototype;\n  }\n}\nexports.FirebaseInstallationsError = FirebaseInstallationsError;\n/**\n * Firebase Messaging error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseMessagingError extends PrefixedFirebaseError {\n  /**\n   * Creates the developer-facing error corresponding to the backend error code.\n   *\n   * @param serverErrorCode - The server error code.\n   * @param [message] The error message. The default message is used\n   *     if not provided.\n   * @param [rawServerResponse] The error's raw server response.\n   * @returns The corresponding developer-facing error.\n   * @internal\n   */\n  static fromServerError(serverErrorCode, message, rawServerResponse) {\n    // If not found, default to unknown error.\n    let clientCodeKey = 'UNKNOWN_ERROR';\n    if (serverErrorCode && serverErrorCode in MESSAGING_SERVER_TO_CLIENT_CODE) {\n      clientCodeKey = MESSAGING_SERVER_TO_CLIENT_CODE[serverErrorCode];\n    }\n    const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n    error.message = message || error.message;\n    if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n      } catch (e) {\n        // Ignore JSON parsing error.\n      }\n    }\n    return new FirebaseMessagingError(error);\n  }\n  /**\n   * @internal\n   */\n  static fromTopicManagementServerError(serverErrorCode, message, rawServerResponse) {\n    // If not found, default to unknown error.\n    const clientCodeKey = TOPIC_MGT_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'UNKNOWN_ERROR';\n    const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n    error.message = message || error.message;\n    if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n      } catch (e) {\n        // Ignore JSON parsing error.\n      }\n    }\n    return new FirebaseMessagingError(error);\n  }\n  /**\n   *\n   * @param info - The error code info.\n   * @param message - The error message. This will override the default message if provided.\n   * @constructor\n   * @internal\n   */\n  constructor(info, message) {\n    // Override default message if custom message provided.\n    super('messaging', info.code, message || info.message);\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = FirebaseMessagingError.prototype;\n  }\n}\nexports.FirebaseMessagingError = FirebaseMessagingError;\n/**\n * Firebase project management error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseProjectManagementError extends PrefixedFirebaseError {\n  /**\n   * @param code - The error code.\n   * @param message - The error message.\n   * @constructor\n   * @internal\n   */\n  constructor(code, message) {\n    super('project-management', code, message);\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    /* tslint:enable:max-line-length */\n    this.__proto__ = FirebaseProjectManagementError.prototype;\n  }\n}\nexports.FirebaseProjectManagementError = FirebaseProjectManagementError;\n/**\n * App client error codes and their default messages.\n */\nclass AppErrorCodes {}\nexports.AppErrorCodes = AppErrorCodes;\nAppErrorCodes.APP_DELETED = 'app-deleted';\nAppErrorCodes.DUPLICATE_APP = 'duplicate-app';\nAppErrorCodes.INVALID_ARGUMENT = 'invalid-argument';\nAppErrorCodes.INTERNAL_ERROR = 'internal-error';\nAppErrorCodes.INVALID_APP_NAME = 'invalid-app-name';\nAppErrorCodes.INVALID_APP_OPTIONS = 'invalid-app-options';\nAppErrorCodes.INVALID_CREDENTIAL = 'invalid-credential';\nAppErrorCodes.NETWORK_ERROR = 'network-error';\nAppErrorCodes.NETWORK_TIMEOUT = 'network-timeout';\nAppErrorCodes.NO_APP = 'no-app';\nAppErrorCodes.UNABLE_TO_PARSE_RESPONSE = 'unable-to-parse-response';\n/**\n * Auth client error codes and their default messages.\n */\nclass AuthClientErrorCode {}\nexports.AuthClientErrorCode = AuthClientErrorCode;\nAuthClientErrorCode.AUTH_BLOCKING_TOKEN_EXPIRED = {\n  code: 'auth-blocking-token-expired',\n  message: 'The provided Firebase Auth Blocking token is expired.'\n};\nAuthClientErrorCode.BILLING_NOT_ENABLED = {\n  code: 'billing-not-enabled',\n  message: 'Feature requires billing to be enabled.'\n};\nAuthClientErrorCode.CLAIMS_TOO_LARGE = {\n  code: 'claims-too-large',\n  message: 'Developer claims maximum payload size exceeded.'\n};\nAuthClientErrorCode.CONFIGURATION_EXISTS = {\n  code: 'configuration-exists',\n  message: 'A configuration already exists with the provided identifier.'\n};\nAuthClientErrorCode.CONFIGURATION_NOT_FOUND = {\n  code: 'configuration-not-found',\n  message: 'There is no configuration corresponding to the provided identifier.'\n};\nAuthClientErrorCode.ID_TOKEN_EXPIRED = {\n  code: 'id-token-expired',\n  message: 'The provided Firebase ID token is expired.'\n};\nAuthClientErrorCode.INVALID_ARGUMENT = {\n  code: 'argument-error',\n  message: 'Invalid argument provided.'\n};\nAuthClientErrorCode.INVALID_CONFIG = {\n  code: 'invalid-config',\n  message: 'The provided configuration is invalid.'\n};\nAuthClientErrorCode.EMAIL_ALREADY_EXISTS = {\n  code: 'email-already-exists',\n  message: 'The email address is already in use by another account.'\n};\nAuthClientErrorCode.EMAIL_NOT_FOUND = {\n  code: 'email-not-found',\n  message: 'There is no user record corresponding to the provided email.'\n};\nAuthClientErrorCode.FORBIDDEN_CLAIM = {\n  code: 'reserved-claim',\n  message: 'The specified developer claim is reserved and cannot be specified.'\n};\nAuthClientErrorCode.INVALID_ID_TOKEN = {\n  code: 'invalid-id-token',\n  message: 'The provided ID token is not a valid Firebase ID token.'\n};\nAuthClientErrorCode.ID_TOKEN_REVOKED = {\n  code: 'id-token-revoked',\n  message: 'The Firebase ID token has been revoked.'\n};\nAuthClientErrorCode.INTERNAL_ERROR = {\n  code: 'internal-error',\n  message: 'An internal error has occurred.'\n};\nAuthClientErrorCode.INVALID_CLAIMS = {\n  code: 'invalid-claims',\n  message: 'The provided custom claim attributes are invalid.'\n};\nAuthClientErrorCode.INVALID_CONTINUE_URI = {\n  code: 'invalid-continue-uri',\n  message: 'The continue URL must be a valid URL string.'\n};\nAuthClientErrorCode.INVALID_CREATION_TIME = {\n  code: 'invalid-creation-time',\n  message: 'The creation time must be a valid UTC date string.'\n};\nAuthClientErrorCode.INVALID_CREDENTIAL = {\n  code: 'invalid-credential',\n  message: 'Invalid credential object provided.'\n};\nAuthClientErrorCode.INVALID_DISABLED_FIELD = {\n  code: 'invalid-disabled-field',\n  message: 'The disabled field must be a boolean.'\n};\nAuthClientErrorCode.INVALID_DISPLAY_NAME = {\n  code: 'invalid-display-name',\n  message: 'The displayName field must be a valid string.'\n};\nAuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN = {\n  code: 'invalid-dynamic-link-domain',\n  message: 'The provided dynamic link domain is not configured or authorized ' + 'for the current project.'\n};\nAuthClientErrorCode.INVALID_EMAIL_VERIFIED = {\n  code: 'invalid-email-verified',\n  message: 'The emailVerified field must be a boolean.'\n};\nAuthClientErrorCode.INVALID_EMAIL = {\n  code: 'invalid-email',\n  message: 'The email address is improperly formatted.'\n};\nAuthClientErrorCode.INVALID_NEW_EMAIL = {\n  code: 'invalid-new-email',\n  message: 'The new email address is improperly formatted.'\n};\nAuthClientErrorCode.INVALID_ENROLLED_FACTORS = {\n  code: 'invalid-enrolled-factors',\n  message: 'The enrolled factors must be a valid array of MultiFactorInfo objects.'\n};\nAuthClientErrorCode.INVALID_ENROLLMENT_TIME = {\n  code: 'invalid-enrollment-time',\n  message: 'The second factor enrollment time must be a valid UTC date string.'\n};\nAuthClientErrorCode.INVALID_HASH_ALGORITHM = {\n  code: 'invalid-hash-algorithm',\n  message: 'The hash algorithm must match one of the strings in the list of ' + 'supported algorithms.'\n};\nAuthClientErrorCode.INVALID_HASH_BLOCK_SIZE = {\n  code: 'invalid-hash-block-size',\n  message: 'The hash block size must be a valid number.'\n};\nAuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH = {\n  code: 'invalid-hash-derived-key-length',\n  message: 'The hash derived key length must be a valid number.'\n};\nAuthClientErrorCode.INVALID_HASH_KEY = {\n  code: 'invalid-hash-key',\n  message: 'The hash key must a valid byte buffer.'\n};\nAuthClientErrorCode.INVALID_HASH_MEMORY_COST = {\n  code: 'invalid-hash-memory-cost',\n  message: 'The hash memory cost must be a valid number.'\n};\nAuthClientErrorCode.INVALID_HASH_PARALLELIZATION = {\n  code: 'invalid-hash-parallelization',\n  message: 'The hash parallelization must be a valid number.'\n};\nAuthClientErrorCode.INVALID_HASH_ROUNDS = {\n  code: 'invalid-hash-rounds',\n  message: 'The hash rounds must be a valid number.'\n};\nAuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR = {\n  code: 'invalid-hash-salt-separator',\n  message: 'The hashing algorithm salt separator field must be a valid byte buffer.'\n};\nAuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME = {\n  code: 'invalid-last-sign-in-time',\n  message: 'The last sign-in time must be a valid UTC date string.'\n};\nAuthClientErrorCode.INVALID_NAME = {\n  code: 'invalid-name',\n  message: 'The resource name provided is invalid.'\n};\nAuthClientErrorCode.INVALID_OAUTH_CLIENT_ID = {\n  code: 'invalid-oauth-client-id',\n  message: 'The provided OAuth client ID is invalid.'\n};\nAuthClientErrorCode.INVALID_PAGE_TOKEN = {\n  code: 'invalid-page-token',\n  message: 'The page token must be a valid non-empty string.'\n};\nAuthClientErrorCode.INVALID_PASSWORD = {\n  code: 'invalid-password',\n  message: 'The password must be a string with at least 6 characters.'\n};\nAuthClientErrorCode.INVALID_PASSWORD_HASH = {\n  code: 'invalid-password-hash',\n  message: 'The password hash must be a valid byte buffer.'\n};\nAuthClientErrorCode.INVALID_PASSWORD_SALT = {\n  code: 'invalid-password-salt',\n  message: 'The password salt must be a valid byte buffer.'\n};\nAuthClientErrorCode.INVALID_PHONE_NUMBER = {\n  code: 'invalid-phone-number',\n  message: 'The phone number must be a non-empty E.164 standard compliant identifier ' + 'string.'\n};\nAuthClientErrorCode.INVALID_PHOTO_URL = {\n  code: 'invalid-photo-url',\n  message: 'The photoURL field must be a valid URL.'\n};\nAuthClientErrorCode.INVALID_PROJECT_ID = {\n  code: 'invalid-project-id',\n  message: 'Invalid parent project. Either parent project doesn\\'t exist or didn\\'t enable multi-tenancy.'\n};\nAuthClientErrorCode.INVALID_PROVIDER_DATA = {\n  code: 'invalid-provider-data',\n  message: 'The providerData must be a valid array of UserInfo objects.'\n};\nAuthClientErrorCode.INVALID_PROVIDER_ID = {\n  code: 'invalid-provider-id',\n  message: 'The providerId must be a valid supported provider identifier string.'\n};\nAuthClientErrorCode.INVALID_PROVIDER_UID = {\n  code: 'invalid-provider-uid',\n  message: 'The providerUid must be a valid provider uid string.'\n};\nAuthClientErrorCode.INVALID_OAUTH_RESPONSETYPE = {\n  code: 'invalid-oauth-responsetype',\n  message: 'Only exactly one OAuth responseType should be set to true.'\n};\nAuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION = {\n  code: 'invalid-session-cookie-duration',\n  message: 'The session cookie duration must be a valid number in milliseconds ' + 'between 5 minutes and 2 weeks.'\n};\nAuthClientErrorCode.INVALID_TENANT_ID = {\n  code: 'invalid-tenant-id',\n  message: 'The tenant ID must be a valid non-empty string.'\n};\nAuthClientErrorCode.INVALID_TENANT_TYPE = {\n  code: 'invalid-tenant-type',\n  message: 'Tenant type must be either \"full_service\" or \"lightweight\".'\n};\nAuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER = {\n  code: 'invalid-testing-phone-number',\n  message: 'Invalid testing phone number or invalid test code provided.'\n};\nAuthClientErrorCode.INVALID_UID = {\n  code: 'invalid-uid',\n  message: 'The uid must be a non-empty string with at most 128 characters.'\n};\nAuthClientErrorCode.INVALID_USER_IMPORT = {\n  code: 'invalid-user-import',\n  message: 'The user record to import is invalid.'\n};\nAuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME = {\n  code: 'invalid-tokens-valid-after-time',\n  message: 'The tokensValidAfterTime must be a valid UTC number in seconds.'\n};\nAuthClientErrorCode.MISMATCHING_TENANT_ID = {\n  code: 'mismatching-tenant-id',\n  message: 'User tenant ID does not match with the current TenantAwareAuth tenant ID.'\n};\nAuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME = {\n  code: 'missing-android-pkg-name',\n  message: 'An Android Package Name must be provided if the Android App is ' + 'required to be installed.'\n};\nAuthClientErrorCode.MISSING_CONFIG = {\n  code: 'missing-config',\n  message: 'The provided configuration is missing required attributes.'\n};\nAuthClientErrorCode.MISSING_CONTINUE_URI = {\n  code: 'missing-continue-uri',\n  message: 'A valid continue URL must be provided in the request.'\n};\nAuthClientErrorCode.MISSING_DISPLAY_NAME = {\n  code: 'missing-display-name',\n  message: 'The resource being created or edited is missing a valid display name.'\n};\nAuthClientErrorCode.MISSING_EMAIL = {\n  code: 'missing-email',\n  message: 'The email is required for the specified action. For example, a multi-factor user ' + 'requires a verified email.'\n};\nAuthClientErrorCode.MISSING_IOS_BUNDLE_ID = {\n  code: 'missing-ios-bundle-id',\n  message: 'The request is missing an iOS Bundle ID.'\n};\nAuthClientErrorCode.MISSING_ISSUER = {\n  code: 'missing-issuer',\n  message: 'The OAuth/OIDC configuration issuer must not be empty.'\n};\nAuthClientErrorCode.MISSING_HASH_ALGORITHM = {\n  code: 'missing-hash-algorithm',\n  message: 'Importing users with password hashes requires that the hashing ' + 'algorithm and its parameters be provided.'\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_ID = {\n  code: 'missing-oauth-client-id',\n  message: 'The OAuth/OIDC configuration client ID must not be empty.'\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_SECRET = {\n  code: 'missing-oauth-client-secret',\n  message: 'The OAuth configuration client secret is required to enable OIDC code flow.'\n};\nAuthClientErrorCode.MISSING_PROVIDER_ID = {\n  code: 'missing-provider-id',\n  message: 'A valid provider ID must be provided in the request.'\n};\nAuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG = {\n  code: 'missing-saml-relying-party-config',\n  message: 'The SAML configuration provided is missing a relying party configuration.'\n};\nAuthClientErrorCode.MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED = {\n  code: 'test-phone-number-limit-exceeded',\n  message: 'The maximum allowed number of test phone number / code pairs has been exceeded.'\n};\nAuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED = {\n  code: 'maximum-user-count-exceeded',\n  message: 'The maximum allowed number of users to import has been exceeded.'\n};\nAuthClientErrorCode.MISSING_UID = {\n  code: 'missing-uid',\n  message: 'A uid identifier is required for the current operation.'\n};\nAuthClientErrorCode.OPERATION_NOT_ALLOWED = {\n  code: 'operation-not-allowed',\n  message: 'The given sign-in provider is disabled for this Firebase project. ' + 'Enable it in the Firebase console, under the sign-in method tab of the ' + 'Auth section.'\n};\nAuthClientErrorCode.PHONE_NUMBER_ALREADY_EXISTS = {\n  code: 'phone-number-already-exists',\n  message: 'The user with the provided phone number already exists.'\n};\nAuthClientErrorCode.PROJECT_NOT_FOUND = {\n  code: 'project-not-found',\n  message: 'No Firebase project was found for the provided credential.'\n};\nAuthClientErrorCode.INSUFFICIENT_PERMISSION = {\n  code: 'insufficient-permission',\n  message: 'Credential implementation provided to initializeApp() via the \"credential\" property ' + 'has insufficient permission to access the requested resource. See ' + 'https://firebase.google.com/docs/admin/setup for details on how to authenticate this SDK ' + 'with appropriate permissions.'\n};\nAuthClientErrorCode.QUOTA_EXCEEDED = {\n  code: 'quota-exceeded',\n  message: 'The project quota for the specified operation has been exceeded.'\n};\nAuthClientErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED = {\n  code: 'second-factor-limit-exceeded',\n  message: 'The maximum number of allowed second factors on a user has been exceeded.'\n};\nAuthClientErrorCode.SECOND_FACTOR_UID_ALREADY_EXISTS = {\n  code: 'second-factor-uid-already-exists',\n  message: 'The specified second factor \"uid\" already exists.'\n};\nAuthClientErrorCode.SESSION_COOKIE_EXPIRED = {\n  code: 'session-cookie-expired',\n  message: 'The Firebase session cookie is expired.'\n};\nAuthClientErrorCode.SESSION_COOKIE_REVOKED = {\n  code: 'session-cookie-revoked',\n  message: 'The Firebase session cookie has been revoked.'\n};\nAuthClientErrorCode.TENANT_NOT_FOUND = {\n  code: 'tenant-not-found',\n  message: 'There is no tenant corresponding to the provided identifier.'\n};\nAuthClientErrorCode.UID_ALREADY_EXISTS = {\n  code: 'uid-already-exists',\n  message: 'The user with the provided uid already exists.'\n};\nAuthClientErrorCode.UNAUTHORIZED_DOMAIN = {\n  code: 'unauthorized-continue-uri',\n  message: 'The domain of the continue URL is not whitelisted. Whitelist the domain in the ' + 'Firebase console.'\n};\nAuthClientErrorCode.UNSUPPORTED_FIRST_FACTOR = {\n  code: 'unsupported-first-factor',\n  message: 'A multi-factor user requires a supported first factor.'\n};\nAuthClientErrorCode.UNSUPPORTED_SECOND_FACTOR = {\n  code: 'unsupported-second-factor',\n  message: 'The request specified an unsupported type of second factor.'\n};\nAuthClientErrorCode.UNSUPPORTED_TENANT_OPERATION = {\n  code: 'unsupported-tenant-operation',\n  message: 'This operation is not supported in a multi-tenant context.'\n};\nAuthClientErrorCode.UNVERIFIED_EMAIL = {\n  code: 'unverified-email',\n  message: 'A verified email is required for the specified action. For example, a multi-factor user ' + 'requires a verified email.'\n};\nAuthClientErrorCode.USER_NOT_FOUND = {\n  code: 'user-not-found',\n  message: 'There is no user record corresponding to the provided identifier.'\n};\nAuthClientErrorCode.NOT_FOUND = {\n  code: 'not-found',\n  message: 'The requested resource was not found.'\n};\nAuthClientErrorCode.USER_DISABLED = {\n  code: 'user-disabled',\n  message: 'The user record is disabled.'\n};\nAuthClientErrorCode.USER_NOT_DISABLED = {\n  code: 'user-not-disabled',\n  message: 'The user must be disabled in order to bulk delete it (or you must pass force=true).'\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ACTION = {\n  code: 'invalid-recaptcha-action',\n  message: 'reCAPTCHA action must be \"BLOCK\".'\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ENFORCEMENT_STATE = {\n  code: 'invalid-recaptcha-enforcement-state',\n  message: 'reCAPTCHA enforcement state must be either \"OFF\", \"AUDIT\" or \"ENFORCE\".'\n};\nAuthClientErrorCode.RECAPTCHA_NOT_ENABLED = {\n  code: 'racaptcha-not-enabled',\n  message: 'reCAPTCHA enterprise is not enabled.'\n};\n/**\n * Messaging client error codes and their default messages.\n */\nclass MessagingClientErrorCode {}\nexports.MessagingClientErrorCode = MessagingClientErrorCode;\nMessagingClientErrorCode.INVALID_ARGUMENT = {\n  code: 'invalid-argument',\n  message: 'Invalid argument provided.'\n};\nMessagingClientErrorCode.INVALID_RECIPIENT = {\n  code: 'invalid-recipient',\n  message: 'Invalid message recipient provided.'\n};\nMessagingClientErrorCode.INVALID_PAYLOAD = {\n  code: 'invalid-payload',\n  message: 'Invalid message payload provided.'\n};\nMessagingClientErrorCode.INVALID_DATA_PAYLOAD_KEY = {\n  code: 'invalid-data-payload-key',\n  message: 'The data message payload contains an invalid key. See the reference documentation ' + 'for the DataMessagePayload type for restricted keys.'\n};\nMessagingClientErrorCode.PAYLOAD_SIZE_LIMIT_EXCEEDED = {\n  code: 'payload-size-limit-exceeded',\n  message: 'The provided message payload exceeds the FCM size limits. See the error documentation ' + 'for more details.'\n};\nMessagingClientErrorCode.INVALID_OPTIONS = {\n  code: 'invalid-options',\n  message: 'Invalid message options provided.'\n};\nMessagingClientErrorCode.INVALID_REGISTRATION_TOKEN = {\n  code: 'invalid-registration-token',\n  message: 'Invalid registration token provided. Make sure it matches the registration token ' + 'the client app receives from registering with FCM.'\n};\nMessagingClientErrorCode.REGISTRATION_TOKEN_NOT_REGISTERED = {\n  code: 'registration-token-not-registered',\n  message: 'The provided registration token is not registered. A previously valid registration ' + 'token can be unregistered for a variety of reasons. See the error documentation for more ' + 'details. Remove this registration token and stop using it to send messages.'\n};\nMessagingClientErrorCode.MISMATCHED_CREDENTIAL = {\n  code: 'mismatched-credential',\n  message: 'The credential used to authenticate this SDK does not have permission to send ' + 'messages to the device corresponding to the provided registration token. Make sure the ' + 'credential and registration token both belong to the same Firebase project.'\n};\nMessagingClientErrorCode.INVALID_PACKAGE_NAME = {\n  code: 'invalid-package-name',\n  message: 'The message was addressed to a registration token whose package name does not match ' + 'the provided \"restrictedPackageName\" option.'\n};\nMessagingClientErrorCode.DEVICE_MESSAGE_RATE_EXCEEDED = {\n  code: 'device-message-rate-exceeded',\n  message: 'The rate of messages to a particular device is too high. Reduce the number of ' + 'messages sent to this device and do not immediately retry sending to this device.'\n};\nMessagingClientErrorCode.TOPICS_MESSAGE_RATE_EXCEEDED = {\n  code: 'topics-message-rate-exceeded',\n  message: 'The rate of messages to subscribers to a particular topic is too high. Reduce the ' + 'number of messages sent for this topic, and do not immediately retry sending to this topic.'\n};\nMessagingClientErrorCode.MESSAGE_RATE_EXCEEDED = {\n  code: 'message-rate-exceeded',\n  message: 'Sending limit exceeded for the message target.'\n};\nMessagingClientErrorCode.THIRD_PARTY_AUTH_ERROR = {\n  code: 'third-party-auth-error',\n  message: 'A message targeted to an iOS device could not be sent because the required APNs ' + 'SSL certificate was not uploaded or has expired. Check the validity of your development ' + 'and production certificates.'\n};\nMessagingClientErrorCode.TOO_MANY_TOPICS = {\n  code: 'too-many-topics',\n  message: 'The maximum number of topics the provided registration token can be subscribed to ' + 'has been exceeded.'\n};\nMessagingClientErrorCode.AUTHENTICATION_ERROR = {\n  code: 'authentication-error',\n  message: 'An error occurred when trying to authenticate to the FCM servers. Make sure the ' + 'credential used to authenticate this SDK has the proper permissions. See ' + 'https://firebase.google.com/docs/admin/setup for setup instructions.'\n};\nMessagingClientErrorCode.SERVER_UNAVAILABLE = {\n  code: 'server-unavailable',\n  message: 'The FCM server could not process the request in time. See the error documentation ' + 'for more details.'\n};\nMessagingClientErrorCode.INTERNAL_ERROR = {\n  code: 'internal-error',\n  message: 'An internal error has occurred. Please retry the request.'\n};\nMessagingClientErrorCode.UNKNOWN_ERROR = {\n  code: 'unknown-error',\n  message: 'An unknown server error was returned.'\n};\nclass InstallationsClientErrorCode {}\nexports.InstallationsClientErrorCode = InstallationsClientErrorCode;\nInstallationsClientErrorCode.INVALID_ARGUMENT = {\n  code: 'invalid-argument',\n  message: 'Invalid argument provided.'\n};\nInstallationsClientErrorCode.INVALID_PROJECT_ID = {\n  code: 'invalid-project-id',\n  message: 'Invalid project ID provided.'\n};\nInstallationsClientErrorCode.INVALID_INSTALLATION_ID = {\n  code: 'invalid-installation-id',\n  message: 'Invalid installation ID provided.'\n};\nInstallationsClientErrorCode.API_ERROR = {\n  code: 'api-error',\n  message: 'Installation ID API call failed.'\n};\nclass InstanceIdClientErrorCode extends InstallationsClientErrorCode {}\nexports.InstanceIdClientErrorCode = InstanceIdClientErrorCode;\nInstanceIdClientErrorCode.INVALID_INSTANCE_ID = {\n  code: 'invalid-instance-id',\n  message: 'Invalid instance ID provided.'\n};\n/** @const {ServerToClientCode} Auth server to client enum error codes. */\nconst AUTH_SERVER_TO_CLIENT_CODE = {\n  // Feature being configured or used requires a billing account.\n  BILLING_NOT_ENABLED: 'BILLING_NOT_ENABLED',\n  // Claims payload is too large.\n  CLAIMS_TOO_LARGE: 'CLAIMS_TOO_LARGE',\n  // Configuration being added already exists.\n  CONFIGURATION_EXISTS: 'CONFIGURATION_EXISTS',\n  // Configuration not found.\n  CONFIGURATION_NOT_FOUND: 'CONFIGURATION_NOT_FOUND',\n  // Provided credential has insufficient permissions.\n  INSUFFICIENT_PERMISSION: 'INSUFFICIENT_PERMISSION',\n  // Provided configuration has invalid fields.\n  INVALID_CONFIG: 'INVALID_CONFIG',\n  // Provided configuration identifier is invalid.\n  INVALID_CONFIG_ID: 'INVALID_PROVIDER_ID',\n  // ActionCodeSettings missing continue URL.\n  INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n  // Dynamic link domain in provided ActionCodeSettings is not authorized.\n  INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n  // uploadAccount provides an email that already exists.\n  DUPLICATE_EMAIL: 'EMAIL_ALREADY_EXISTS',\n  // uploadAccount provides a localId that already exists.\n  DUPLICATE_LOCAL_ID: 'UID_ALREADY_EXISTS',\n  // Request specified a multi-factor enrollment ID that already exists.\n  DUPLICATE_MFA_ENROLLMENT_ID: 'SECOND_FACTOR_UID_ALREADY_EXISTS',\n  // setAccountInfo email already exists.\n  EMAIL_EXISTS: 'EMAIL_ALREADY_EXISTS',\n  // /accounts:sendOobCode for password reset when user is not found.\n  EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',\n  // Reserved claim name.\n  FORBIDDEN_CLAIM: 'FORBIDDEN_CLAIM',\n  // Invalid claims provided.\n  INVALID_CLAIMS: 'INVALID_CLAIMS',\n  // Invalid session cookie duration.\n  INVALID_DURATION: 'INVALID_SESSION_COOKIE_DURATION',\n  // Invalid email provided.\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  // Invalid new email provided.\n  INVALID_NEW_EMAIL: 'INVALID_NEW_EMAIL',\n  // Invalid tenant display name. This can be thrown on CreateTenant and UpdateTenant.\n  INVALID_DISPLAY_NAME: 'INVALID_DISPLAY_NAME',\n  // Invalid ID token provided.\n  INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n  // Invalid tenant/parent resource name.\n  INVALID_NAME: 'INVALID_NAME',\n  // OIDC configuration has an invalid OAuth client ID.\n  INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n  // Invalid page token.\n  INVALID_PAGE_SELECTION: 'INVALID_PAGE_TOKEN',\n  // Invalid phone number.\n  INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n  // Invalid agent project. Either agent project doesn't exist or didn't enable multi-tenancy.\n  INVALID_PROJECT_ID: 'INVALID_PROJECT_ID',\n  // Invalid provider ID.\n  INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n  // Invalid service account.\n  INVALID_SERVICE_ACCOUNT: 'INVALID_SERVICE_ACCOUNT',\n  // Invalid testing phone number.\n  INVALID_TESTING_PHONE_NUMBER: 'INVALID_TESTING_PHONE_NUMBER',\n  // Invalid tenant type.\n  INVALID_TENANT_TYPE: 'INVALID_TENANT_TYPE',\n  // Missing Android package name.\n  MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n  // Missing configuration.\n  MISSING_CONFIG: 'MISSING_CONFIG',\n  // Missing configuration identifier.\n  MISSING_CONFIG_ID: 'MISSING_PROVIDER_ID',\n  // Missing tenant display name: This can be thrown on CreateTenant and UpdateTenant.\n  MISSING_DISPLAY_NAME: 'MISSING_DISPLAY_NAME',\n  // Email is required for the specified action. For example a multi-factor user requires\n  // a verified email.\n  MISSING_EMAIL: 'MISSING_EMAIL',\n  // Missing iOS bundle ID.\n  MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n  // Missing OIDC issuer.\n  MISSING_ISSUER: 'MISSING_ISSUER',\n  // No localId provided (deleteAccount missing localId).\n  MISSING_LOCAL_ID: 'MISSING_UID',\n  // OIDC configuration is missing an OAuth client ID.\n  MISSING_OAUTH_CLIENT_ID: 'MISSING_OAUTH_CLIENT_ID',\n  // Missing provider ID.\n  MISSING_PROVIDER_ID: 'MISSING_PROVIDER_ID',\n  // Missing SAML RP config.\n  MISSING_SAML_RELYING_PARTY_CONFIG: 'MISSING_SAML_RELYING_PARTY_CONFIG',\n  // Empty user list in uploadAccount.\n  MISSING_USER_ACCOUNT: 'MISSING_UID',\n  // Password auth disabled in console.\n  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n  // Provided credential has insufficient permissions.\n  PERMISSION_DENIED: 'INSUFFICIENT_PERMISSION',\n  // Phone number already exists.\n  PHONE_NUMBER_EXISTS: 'PHONE_NUMBER_ALREADY_EXISTS',\n  // Project not found.\n  PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n  // In multi-tenancy context: project creation quota exceeded.\n  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n  // Currently only 5 second factors can be set on the same user.\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  // Tenant not found.\n  TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n  // Tenant ID mismatch.\n  TENANT_ID_MISMATCH: 'MISMATCHING_TENANT_ID',\n  // Token expired error.\n  TOKEN_EXPIRED: 'ID_TOKEN_EXPIRED',\n  // Continue URL provided in ActionCodeSettings has a domain that is not whitelisted.\n  UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n  // A multi-factor user requires a supported first factor.\n  UNSUPPORTED_FIRST_FACTOR: 'UNSUPPORTED_FIRST_FACTOR',\n  // The request specified an unsupported type of second factor.\n  UNSUPPORTED_SECOND_FACTOR: 'UNSUPPORTED_SECOND_FACTOR',\n  // Operation is not supported in a multi-tenant context.\n  UNSUPPORTED_TENANT_OPERATION: 'UNSUPPORTED_TENANT_OPERATION',\n  // A verified email is required for the specified action. For example a multi-factor user\n  // requires a verified email.\n  UNVERIFIED_EMAIL: 'UNVERIFIED_EMAIL',\n  // User on which action is to be performed is not found.\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  // User record is disabled.\n  USER_DISABLED: 'USER_DISABLED',\n  // Password provided is too weak.\n  WEAK_PASSWORD: 'INVALID_PASSWORD',\n  // Unrecognized reCAPTCHA action.\n  INVALID_RECAPTCHA_ACTION: 'INVALID_RECAPTCHA_ACTION',\n  // Unrecognized reCAPTCHA enforcement state.\n  INVALID_RECAPTCHA_ENFORCEMENT_STATE: 'INVALID_RECAPTCHA_ENFORCEMENT_STATE',\n  // reCAPTCHA is not enabled for account defender.\n  RECAPTCHA_NOT_ENABLED: 'RECAPTCHA_NOT_ENABLED'\n};\n/** @const {ServerToClientCode} Messaging server to client enum error codes. */\nconst MESSAGING_SERVER_TO_CLIENT_CODE = {\n  /* GENERIC ERRORS */\n  // Generic invalid message parameter provided.\n  InvalidParameters: 'INVALID_ARGUMENT',\n  // Mismatched sender ID.\n  MismatchSenderId: 'MISMATCHED_CREDENTIAL',\n  // FCM server unavailable.\n  Unavailable: 'SERVER_UNAVAILABLE',\n  // FCM server internal error.\n  InternalServerError: 'INTERNAL_ERROR',\n  /* SEND ERRORS */\n  // Invalid registration token format.\n  InvalidRegistration: 'INVALID_REGISTRATION_TOKEN',\n  // Registration token is not registered.\n  NotRegistered: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  // Registration token does not match restricted package name.\n  InvalidPackageName: 'INVALID_PACKAGE_NAME',\n  // Message payload size limit exceeded.\n  MessageTooBig: 'PAYLOAD_SIZE_LIMIT_EXCEEDED',\n  // Invalid key in the data message payload.\n  InvalidDataKey: 'INVALID_DATA_PAYLOAD_KEY',\n  // Invalid time to live option.\n  InvalidTtl: 'INVALID_OPTIONS',\n  // Device message rate exceeded.\n  DeviceMessageRateExceeded: 'DEVICE_MESSAGE_RATE_EXCEEDED',\n  // Topics message rate exceeded.\n  TopicsMessageRateExceeded: 'TOPICS_MESSAGE_RATE_EXCEEDED',\n  // Invalid APNs credentials.\n  InvalidApnsCredential: 'THIRD_PARTY_AUTH_ERROR',\n  /* FCM v1 canonical error codes */\n  NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  PERMISSION_DENIED: 'MISMATCHED_CREDENTIAL',\n  RESOURCE_EXHAUSTED: 'MESSAGE_RATE_EXCEEDED',\n  UNAUTHENTICATED: 'THIRD_PARTY_AUTH_ERROR',\n  /* FCM v1 new error codes */\n  APNS_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n  INTERNAL: 'INTERNAL_ERROR',\n  INVALID_ARGUMENT: 'INVALID_ARGUMENT',\n  QUOTA_EXCEEDED: 'MESSAGE_RATE_EXCEEDED',\n  SENDER_ID_MISMATCH: 'MISMATCHED_CREDENTIAL',\n  THIRD_PARTY_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n  UNAVAILABLE: 'SERVER_UNAVAILABLE',\n  UNREGISTERED: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  UNSPECIFIED_ERROR: 'UNKNOWN_ERROR'\n};\n/** @const {ServerToClientCode} Topic management (IID) server to client enum error codes. */\nconst TOPIC_MGT_SERVER_TO_CLIENT_CODE = {\n  /* TOPIC SUBSCRIPTION MANAGEMENT ERRORS */\n  NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  INVALID_ARGUMENT: 'INVALID_REGISTRATION_TOKEN',\n  TOO_MANY_TOPICS: 'TOO_MANY_TOPICS',\n  RESOURCE_EXHAUSTED: 'TOO_MANY_TOPICS',\n  PERMISSION_DENIED: 'AUTHENTICATION_ERROR',\n  DEADLINE_EXCEEDED: 'SERVER_UNAVAILABLE',\n  INTERNAL: 'INTERNAL_ERROR',\n  UNKNOWN: 'UNKNOWN_ERROR'\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","InstanceIdClientErrorCode","InstallationsClientErrorCode","MessagingClientErrorCode","AuthClientErrorCode","AppErrorCodes","FirebaseProjectManagementError","FirebaseMessagingError","FirebaseInstallationsError","FirebaseInstanceIdError","FirebaseFirestoreError","FirebaseDatabaseError","FirebaseAuthError","FirebaseAppError","PrefixedFirebaseError","FirebaseError","deep_copy_1","require","Error","constructor","errorInfo","message","__proto__","prototype","code","toJSON","codePrefix","hasCode","fromServerError","serverErrorCode","rawServerResponse","colonSeparator","indexOf","customMessage","substring","trim","clientCodeKey","AUTH_SERVER_TO_CLIENT_CODE","error","deepCopy","JSON","stringify","e","info","MESSAGING_SERVER_TO_CLIENT_CODE","fromTopicManagementServerError","TOPIC_MGT_SERVER_TO_CLIENT_CODE","APP_DELETED","DUPLICATE_APP","INVALID_ARGUMENT","INTERNAL_ERROR","INVALID_APP_NAME","INVALID_APP_OPTIONS","INVALID_CREDENTIAL","NETWORK_ERROR","NETWORK_TIMEOUT","NO_APP","UNABLE_TO_PARSE_RESPONSE","AUTH_BLOCKING_TOKEN_EXPIRED","BILLING_NOT_ENABLED","CLAIMS_TOO_LARGE","CONFIGURATION_EXISTS","CONFIGURATION_NOT_FOUND","ID_TOKEN_EXPIRED","INVALID_CONFIG","EMAIL_ALREADY_EXISTS","EMAIL_NOT_FOUND","FORBIDDEN_CLAIM","INVALID_ID_TOKEN","ID_TOKEN_REVOKED","INVALID_CLAIMS","INVALID_CONTINUE_URI","INVALID_CREATION_TIME","INVALID_DISABLED_FIELD","INVALID_DISPLAY_NAME","INVALID_DYNAMIC_LINK_DOMAIN","INVALID_EMAIL_VERIFIED","INVALID_EMAIL","INVALID_NEW_EMAIL","INVALID_ENROLLED_FACTORS","INVALID_ENROLLMENT_TIME","INVALID_HASH_ALGORITHM","INVALID_HASH_BLOCK_SIZE","INVALID_HASH_DERIVED_KEY_LENGTH","INVALID_HASH_KEY","INVALID_HASH_MEMORY_COST","INVALID_HASH_PARALLELIZATION","INVALID_HASH_ROUNDS","INVALID_HASH_SALT_SEPARATOR","INVALID_LAST_SIGN_IN_TIME","INVALID_NAME","INVALID_OAUTH_CLIENT_ID","INVALID_PAGE_TOKEN","INVALID_PASSWORD","INVALID_PASSWORD_HASH","INVALID_PASSWORD_SALT","INVALID_PHONE_NUMBER","INVALID_PHOTO_URL","INVALID_PROJECT_ID","INVALID_PROVIDER_DATA","INVALID_PROVIDER_ID","INVALID_PROVIDER_UID","INVALID_OAUTH_RESPONSETYPE","INVALID_SESSION_COOKIE_DURATION","INVALID_TENANT_ID","INVALID_TENANT_TYPE","INVALID_TESTING_PHONE_NUMBER","INVALID_UID","INVALID_USER_IMPORT","INVALID_TOKENS_VALID_AFTER_TIME","MISMATCHING_TENANT_ID","MISSING_ANDROID_PACKAGE_NAME","MISSING_CONFIG","MISSING_CONTINUE_URI","MISSING_DISPLAY_NAME","MISSING_EMAIL","MISSING_IOS_BUNDLE_ID","MISSING_ISSUER","MISSING_HASH_ALGORITHM","MISSING_OAUTH_CLIENT_ID","MISSING_OAUTH_CLIENT_SECRET","MISSING_PROVIDER_ID","MISSING_SAML_RELYING_PARTY_CONFIG","MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED","MAXIMUM_USER_COUNT_EXCEEDED","MISSING_UID","OPERATION_NOT_ALLOWED","PHONE_NUMBER_ALREADY_EXISTS","PROJECT_NOT_FOUND","INSUFFICIENT_PERMISSION","QUOTA_EXCEEDED","SECOND_FACTOR_LIMIT_EXCEEDED","SECOND_FACTOR_UID_ALREADY_EXISTS","SESSION_COOKIE_EXPIRED","SESSION_COOKIE_REVOKED","TENANT_NOT_FOUND","UID_ALREADY_EXISTS","UNAUTHORIZED_DOMAIN","UNSUPPORTED_FIRST_FACTOR","UNSUPPORTED_SECOND_FACTOR","UNSUPPORTED_TENANT_OPERATION","UNVERIFIED_EMAIL","USER_NOT_FOUND","NOT_FOUND","USER_DISABLED","USER_NOT_DISABLED","INVALID_RECAPTCHA_ACTION","INVALID_RECAPTCHA_ENFORCEMENT_STATE","RECAPTCHA_NOT_ENABLED","INVALID_RECIPIENT","INVALID_PAYLOAD","INVALID_DATA_PAYLOAD_KEY","PAYLOAD_SIZE_LIMIT_EXCEEDED","INVALID_OPTIONS","INVALID_REGISTRATION_TOKEN","REGISTRATION_TOKEN_NOT_REGISTERED","MISMATCHED_CREDENTIAL","INVALID_PACKAGE_NAME","DEVICE_MESSAGE_RATE_EXCEEDED","TOPICS_MESSAGE_RATE_EXCEEDED","MESSAGE_RATE_EXCEEDED","THIRD_PARTY_AUTH_ERROR","TOO_MANY_TOPICS","AUTHENTICATION_ERROR","SERVER_UNAVAILABLE","UNKNOWN_ERROR","INVALID_INSTALLATION_ID","API_ERROR","INVALID_INSTANCE_ID","INVALID_CONFIG_ID","DUPLICATE_EMAIL","DUPLICATE_LOCAL_ID","DUPLICATE_MFA_ENROLLMENT_ID","EMAIL_EXISTS","INVALID_DURATION","INVALID_PAGE_SELECTION","INVALID_SERVICE_ACCOUNT","MISSING_CONFIG_ID","MISSING_LOCAL_ID","MISSING_USER_ACCOUNT","PERMISSION_DENIED","PHONE_NUMBER_EXISTS","TENANT_ID_MISMATCH","TOKEN_EXPIRED","WEAK_PASSWORD","InvalidParameters","MismatchSenderId","Unavailable","InternalServerError","InvalidRegistration","NotRegistered","InvalidPackageName","MessageTooBig","InvalidDataKey","InvalidTtl","DeviceMessageRateExceeded","TopicsMessageRateExceeded","InvalidApnsCredential","RESOURCE_EXHAUSTED","UNAUTHENTICATED","APNS_AUTH_ERROR","INTERNAL","SENDER_ID_MISMATCH","UNAVAILABLE","UNREGISTERED","UNSPECIFIED_ERROR","DEADLINE_EXCEEDED","UNKNOWN"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/firebase-admin/lib/utils/error.js"],"sourcesContent":["/*! firebase-admin v12.2.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceIdClientErrorCode = exports.InstallationsClientErrorCode = exports.MessagingClientErrorCode = exports.AuthClientErrorCode = exports.AppErrorCodes = exports.FirebaseProjectManagementError = exports.FirebaseMessagingError = exports.FirebaseInstallationsError = exports.FirebaseInstanceIdError = exports.FirebaseFirestoreError = exports.FirebaseDatabaseError = exports.FirebaseAuthError = exports.FirebaseAppError = exports.PrefixedFirebaseError = exports.FirebaseError = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n * Firebase error code structure. This extends Error.\n */\nclass FirebaseError extends Error {\n    /**\n     * @param errorInfo - The error information (code and message).\n     * @constructor\n     * @internal\n     */\n    constructor(errorInfo) {\n        super(errorInfo.message);\n        this.errorInfo = errorInfo;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseError.prototype;\n    }\n    /** @returns The error code. */\n    get code() {\n        return this.errorInfo?.code;\n    }\n    /** @returns The error message. */\n    get message() {\n        return this.errorInfo?.message;\n    }\n    /** @returns The object representation of the error. */\n    toJSON() {\n        return {\n            code: this.code,\n            message: this.message,\n        };\n    }\n}\nexports.FirebaseError = FirebaseError;\n/**\n * A FirebaseError with a prefix in front of the error code.\n */\nclass PrefixedFirebaseError extends FirebaseError {\n    /**\n     * @param codePrefix - The prefix to apply to the error code.\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(codePrefix, code, message) {\n        super({\n            code: `${codePrefix}/${code}`,\n            message,\n        });\n        this.codePrefix = codePrefix;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = PrefixedFirebaseError.prototype;\n    }\n    /**\n     * Allows the error type to be checked without needing to know implementation details\n     * of the code prefixing.\n     *\n     * @param code - The non-prefixed error code to test against.\n     * @returns True if the code matches, false otherwise.\n     */\n    hasCode(code) {\n        return `${this.codePrefix}/${code}` === this.code;\n    }\n}\nexports.PrefixedFirebaseError = PrefixedFirebaseError;\n/**\n * Firebase App error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAppError extends PrefixedFirebaseError {\n    /**\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(code, message) {\n        super('app', code, message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseAppError.prototype;\n    }\n}\nexports.FirebaseAppError = FirebaseAppError;\n/**\n * Firebase Auth error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseAuthError extends PrefixedFirebaseError {\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param serverErrorCode - The server error code.\n     * @param [message] The error message. The default message is used\n     *     if not provided.\n     * @param [rawServerResponse] The error's raw server response.\n     * @returns The corresponding developer-facing error.\n     * @internal\n     */\n    static fromServerError(serverErrorCode, message, rawServerResponse) {\n        // serverErrorCode could contain additional details:\n        // ERROR_CODE : Detailed message which can also contain colons\n        const colonSeparator = (serverErrorCode || '').indexOf(':');\n        let customMessage = null;\n        if (colonSeparator !== -1) {\n            customMessage = serverErrorCode.substring(colonSeparator + 1).trim();\n            serverErrorCode = serverErrorCode.substring(0, colonSeparator).trim();\n        }\n        // If not found, default to internal error.\n        const clientCodeKey = AUTH_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'INTERNAL_ERROR';\n        const error = (0, deep_copy_1.deepCopy)(AuthClientErrorCode[clientCodeKey]);\n        // Server detailed message should have highest priority.\n        error.message = customMessage || message || error.message;\n        if (clientCodeKey === 'INTERNAL_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseAuthError(error);\n    }\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super('auth', info.code, message || info.message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseAuthError.prototype;\n    }\n}\nexports.FirebaseAuthError = FirebaseAuthError;\n/**\n * Firebase Database error code structure. This extends FirebaseError.\n */\nclass FirebaseDatabaseError extends FirebaseError {\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'database/' + info.code, message: message || info.message });\n    }\n}\nexports.FirebaseDatabaseError = FirebaseDatabaseError;\n/**\n * Firebase Firestore error code structure. This extends FirebaseError.\n */\nclass FirebaseFirestoreError extends FirebaseError {\n    /**\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'firestore/' + info.code, message: message || info.message });\n    }\n}\nexports.FirebaseFirestoreError = FirebaseFirestoreError;\n/**\n * Firebase instance ID error code structure. This extends FirebaseError.\n */\nclass FirebaseInstanceIdError extends FirebaseError {\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'instance-id/' + info.code, message: message || info.message });\n        this.__proto__ = FirebaseInstanceIdError.prototype;\n    }\n}\nexports.FirebaseInstanceIdError = FirebaseInstanceIdError;\n/**\n * Firebase Installations service error code structure. This extends `FirebaseError`.\n */\nclass FirebaseInstallationsError extends FirebaseError {\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default\n     *     message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super({ code: 'installations/' + info.code, message: message || info.message });\n        this.__proto__ = FirebaseInstallationsError.prototype;\n    }\n}\nexports.FirebaseInstallationsError = FirebaseInstallationsError;\n/**\n * Firebase Messaging error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseMessagingError extends PrefixedFirebaseError {\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param serverErrorCode - The server error code.\n     * @param [message] The error message. The default message is used\n     *     if not provided.\n     * @param [rawServerResponse] The error's raw server response.\n     * @returns The corresponding developer-facing error.\n     * @internal\n     */\n    static fromServerError(serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        let clientCodeKey = 'UNKNOWN_ERROR';\n        if (serverErrorCode && serverErrorCode in MESSAGING_SERVER_TO_CLIENT_CODE) {\n            clientCodeKey = MESSAGING_SERVER_TO_CLIENT_CODE[serverErrorCode];\n        }\n        const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    }\n    /**\n     * @internal\n     */\n    static fromTopicManagementServerError(serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        const clientCodeKey = TOPIC_MGT_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'UNKNOWN_ERROR';\n        const error = (0, deep_copy_1.deepCopy)(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += ` Raw server response: \"${JSON.stringify(rawServerResponse)}\"`;\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    }\n    /**\n     *\n     * @param info - The error code info.\n     * @param message - The error message. This will override the default message if provided.\n     * @constructor\n     * @internal\n     */\n    constructor(info, message) {\n        // Override default message if custom message provided.\n        super('messaging', info.code, message || info.message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseMessagingError.prototype;\n    }\n}\nexports.FirebaseMessagingError = FirebaseMessagingError;\n/**\n * Firebase project management error code structure. This extends PrefixedFirebaseError.\n */\nclass FirebaseProjectManagementError extends PrefixedFirebaseError {\n    /**\n     * @param code - The error code.\n     * @param message - The error message.\n     * @constructor\n     * @internal\n     */\n    constructor(code, message) {\n        super('project-management', code, message);\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = FirebaseProjectManagementError.prototype;\n    }\n}\nexports.FirebaseProjectManagementError = FirebaseProjectManagementError;\n/**\n * App client error codes and their default messages.\n */\nclass AppErrorCodes {\n}\nexports.AppErrorCodes = AppErrorCodes;\nAppErrorCodes.APP_DELETED = 'app-deleted';\nAppErrorCodes.DUPLICATE_APP = 'duplicate-app';\nAppErrorCodes.INVALID_ARGUMENT = 'invalid-argument';\nAppErrorCodes.INTERNAL_ERROR = 'internal-error';\nAppErrorCodes.INVALID_APP_NAME = 'invalid-app-name';\nAppErrorCodes.INVALID_APP_OPTIONS = 'invalid-app-options';\nAppErrorCodes.INVALID_CREDENTIAL = 'invalid-credential';\nAppErrorCodes.NETWORK_ERROR = 'network-error';\nAppErrorCodes.NETWORK_TIMEOUT = 'network-timeout';\nAppErrorCodes.NO_APP = 'no-app';\nAppErrorCodes.UNABLE_TO_PARSE_RESPONSE = 'unable-to-parse-response';\n/**\n * Auth client error codes and their default messages.\n */\nclass AuthClientErrorCode {\n}\nexports.AuthClientErrorCode = AuthClientErrorCode;\nAuthClientErrorCode.AUTH_BLOCKING_TOKEN_EXPIRED = {\n    code: 'auth-blocking-token-expired',\n    message: 'The provided Firebase Auth Blocking token is expired.',\n};\nAuthClientErrorCode.BILLING_NOT_ENABLED = {\n    code: 'billing-not-enabled',\n    message: 'Feature requires billing to be enabled.',\n};\nAuthClientErrorCode.CLAIMS_TOO_LARGE = {\n    code: 'claims-too-large',\n    message: 'Developer claims maximum payload size exceeded.',\n};\nAuthClientErrorCode.CONFIGURATION_EXISTS = {\n    code: 'configuration-exists',\n    message: 'A configuration already exists with the provided identifier.',\n};\nAuthClientErrorCode.CONFIGURATION_NOT_FOUND = {\n    code: 'configuration-not-found',\n    message: 'There is no configuration corresponding to the provided identifier.',\n};\nAuthClientErrorCode.ID_TOKEN_EXPIRED = {\n    code: 'id-token-expired',\n    message: 'The provided Firebase ID token is expired.',\n};\nAuthClientErrorCode.INVALID_ARGUMENT = {\n    code: 'argument-error',\n    message: 'Invalid argument provided.',\n};\nAuthClientErrorCode.INVALID_CONFIG = {\n    code: 'invalid-config',\n    message: 'The provided configuration is invalid.',\n};\nAuthClientErrorCode.EMAIL_ALREADY_EXISTS = {\n    code: 'email-already-exists',\n    message: 'The email address is already in use by another account.',\n};\nAuthClientErrorCode.EMAIL_NOT_FOUND = {\n    code: 'email-not-found',\n    message: 'There is no user record corresponding to the provided email.',\n};\nAuthClientErrorCode.FORBIDDEN_CLAIM = {\n    code: 'reserved-claim',\n    message: 'The specified developer claim is reserved and cannot be specified.',\n};\nAuthClientErrorCode.INVALID_ID_TOKEN = {\n    code: 'invalid-id-token',\n    message: 'The provided ID token is not a valid Firebase ID token.',\n};\nAuthClientErrorCode.ID_TOKEN_REVOKED = {\n    code: 'id-token-revoked',\n    message: 'The Firebase ID token has been revoked.',\n};\nAuthClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred.',\n};\nAuthClientErrorCode.INVALID_CLAIMS = {\n    code: 'invalid-claims',\n    message: 'The provided custom claim attributes are invalid.',\n};\nAuthClientErrorCode.INVALID_CONTINUE_URI = {\n    code: 'invalid-continue-uri',\n    message: 'The continue URL must be a valid URL string.',\n};\nAuthClientErrorCode.INVALID_CREATION_TIME = {\n    code: 'invalid-creation-time',\n    message: 'The creation time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_CREDENTIAL = {\n    code: 'invalid-credential',\n    message: 'Invalid credential object provided.',\n};\nAuthClientErrorCode.INVALID_DISABLED_FIELD = {\n    code: 'invalid-disabled-field',\n    message: 'The disabled field must be a boolean.',\n};\nAuthClientErrorCode.INVALID_DISPLAY_NAME = {\n    code: 'invalid-display-name',\n    message: 'The displayName field must be a valid string.',\n};\nAuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN = {\n    code: 'invalid-dynamic-link-domain',\n    message: 'The provided dynamic link domain is not configured or authorized ' +\n        'for the current project.',\n};\nAuthClientErrorCode.INVALID_EMAIL_VERIFIED = {\n    code: 'invalid-email-verified',\n    message: 'The emailVerified field must be a boolean.',\n};\nAuthClientErrorCode.INVALID_EMAIL = {\n    code: 'invalid-email',\n    message: 'The email address is improperly formatted.',\n};\nAuthClientErrorCode.INVALID_NEW_EMAIL = {\n    code: 'invalid-new-email',\n    message: 'The new email address is improperly formatted.',\n};\nAuthClientErrorCode.INVALID_ENROLLED_FACTORS = {\n    code: 'invalid-enrolled-factors',\n    message: 'The enrolled factors must be a valid array of MultiFactorInfo objects.',\n};\nAuthClientErrorCode.INVALID_ENROLLMENT_TIME = {\n    code: 'invalid-enrollment-time',\n    message: 'The second factor enrollment time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_HASH_ALGORITHM = {\n    code: 'invalid-hash-algorithm',\n    message: 'The hash algorithm must match one of the strings in the list of ' +\n        'supported algorithms.',\n};\nAuthClientErrorCode.INVALID_HASH_BLOCK_SIZE = {\n    code: 'invalid-hash-block-size',\n    message: 'The hash block size must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH = {\n    code: 'invalid-hash-derived-key-length',\n    message: 'The hash derived key length must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_KEY = {\n    code: 'invalid-hash-key',\n    message: 'The hash key must a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_HASH_MEMORY_COST = {\n    code: 'invalid-hash-memory-cost',\n    message: 'The hash memory cost must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_PARALLELIZATION = {\n    code: 'invalid-hash-parallelization',\n    message: 'The hash parallelization must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_ROUNDS = {\n    code: 'invalid-hash-rounds',\n    message: 'The hash rounds must be a valid number.',\n};\nAuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR = {\n    code: 'invalid-hash-salt-separator',\n    message: 'The hashing algorithm salt separator field must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME = {\n    code: 'invalid-last-sign-in-time',\n    message: 'The last sign-in time must be a valid UTC date string.',\n};\nAuthClientErrorCode.INVALID_NAME = {\n    code: 'invalid-name',\n    message: 'The resource name provided is invalid.',\n};\nAuthClientErrorCode.INVALID_OAUTH_CLIENT_ID = {\n    code: 'invalid-oauth-client-id',\n    message: 'The provided OAuth client ID is invalid.',\n};\nAuthClientErrorCode.INVALID_PAGE_TOKEN = {\n    code: 'invalid-page-token',\n    message: 'The page token must be a valid non-empty string.',\n};\nAuthClientErrorCode.INVALID_PASSWORD = {\n    code: 'invalid-password',\n    message: 'The password must be a string with at least 6 characters.',\n};\nAuthClientErrorCode.INVALID_PASSWORD_HASH = {\n    code: 'invalid-password-hash',\n    message: 'The password hash must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_PASSWORD_SALT = {\n    code: 'invalid-password-salt',\n    message: 'The password salt must be a valid byte buffer.',\n};\nAuthClientErrorCode.INVALID_PHONE_NUMBER = {\n    code: 'invalid-phone-number',\n    message: 'The phone number must be a non-empty E.164 standard compliant identifier ' +\n        'string.',\n};\nAuthClientErrorCode.INVALID_PHOTO_URL = {\n    code: 'invalid-photo-url',\n    message: 'The photoURL field must be a valid URL.',\n};\nAuthClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid parent project. Either parent project doesn\\'t exist or didn\\'t enable multi-tenancy.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_DATA = {\n    code: 'invalid-provider-data',\n    message: 'The providerData must be a valid array of UserInfo objects.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_ID = {\n    code: 'invalid-provider-id',\n    message: 'The providerId must be a valid supported provider identifier string.',\n};\nAuthClientErrorCode.INVALID_PROVIDER_UID = {\n    code: 'invalid-provider-uid',\n    message: 'The providerUid must be a valid provider uid string.',\n};\nAuthClientErrorCode.INVALID_OAUTH_RESPONSETYPE = {\n    code: 'invalid-oauth-responsetype',\n    message: 'Only exactly one OAuth responseType should be set to true.',\n};\nAuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION = {\n    code: 'invalid-session-cookie-duration',\n    message: 'The session cookie duration must be a valid number in milliseconds ' +\n        'between 5 minutes and 2 weeks.',\n};\nAuthClientErrorCode.INVALID_TENANT_ID = {\n    code: 'invalid-tenant-id',\n    message: 'The tenant ID must be a valid non-empty string.',\n};\nAuthClientErrorCode.INVALID_TENANT_TYPE = {\n    code: 'invalid-tenant-type',\n    message: 'Tenant type must be either \"full_service\" or \"lightweight\".',\n};\nAuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER = {\n    code: 'invalid-testing-phone-number',\n    message: 'Invalid testing phone number or invalid test code provided.',\n};\nAuthClientErrorCode.INVALID_UID = {\n    code: 'invalid-uid',\n    message: 'The uid must be a non-empty string with at most 128 characters.',\n};\nAuthClientErrorCode.INVALID_USER_IMPORT = {\n    code: 'invalid-user-import',\n    message: 'The user record to import is invalid.',\n};\nAuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME = {\n    code: 'invalid-tokens-valid-after-time',\n    message: 'The tokensValidAfterTime must be a valid UTC number in seconds.',\n};\nAuthClientErrorCode.MISMATCHING_TENANT_ID = {\n    code: 'mismatching-tenant-id',\n    message: 'User tenant ID does not match with the current TenantAwareAuth tenant ID.',\n};\nAuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME = {\n    code: 'missing-android-pkg-name',\n    message: 'An Android Package Name must be provided if the Android App is ' +\n        'required to be installed.',\n};\nAuthClientErrorCode.MISSING_CONFIG = {\n    code: 'missing-config',\n    message: 'The provided configuration is missing required attributes.',\n};\nAuthClientErrorCode.MISSING_CONTINUE_URI = {\n    code: 'missing-continue-uri',\n    message: 'A valid continue URL must be provided in the request.',\n};\nAuthClientErrorCode.MISSING_DISPLAY_NAME = {\n    code: 'missing-display-name',\n    message: 'The resource being created or edited is missing a valid display name.',\n};\nAuthClientErrorCode.MISSING_EMAIL = {\n    code: 'missing-email',\n    message: 'The email is required for the specified action. For example, a multi-factor user ' +\n        'requires a verified email.',\n};\nAuthClientErrorCode.MISSING_IOS_BUNDLE_ID = {\n    code: 'missing-ios-bundle-id',\n    message: 'The request is missing an iOS Bundle ID.',\n};\nAuthClientErrorCode.MISSING_ISSUER = {\n    code: 'missing-issuer',\n    message: 'The OAuth/OIDC configuration issuer must not be empty.',\n};\nAuthClientErrorCode.MISSING_HASH_ALGORITHM = {\n    code: 'missing-hash-algorithm',\n    message: 'Importing users with password hashes requires that the hashing ' +\n        'algorithm and its parameters be provided.',\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_ID = {\n    code: 'missing-oauth-client-id',\n    message: 'The OAuth/OIDC configuration client ID must not be empty.',\n};\nAuthClientErrorCode.MISSING_OAUTH_CLIENT_SECRET = {\n    code: 'missing-oauth-client-secret',\n    message: 'The OAuth configuration client secret is required to enable OIDC code flow.',\n};\nAuthClientErrorCode.MISSING_PROVIDER_ID = {\n    code: 'missing-provider-id',\n    message: 'A valid provider ID must be provided in the request.',\n};\nAuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG = {\n    code: 'missing-saml-relying-party-config',\n    message: 'The SAML configuration provided is missing a relying party configuration.',\n};\nAuthClientErrorCode.MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED = {\n    code: 'test-phone-number-limit-exceeded',\n    message: 'The maximum allowed number of test phone number / code pairs has been exceeded.',\n};\nAuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED = {\n    code: 'maximum-user-count-exceeded',\n    message: 'The maximum allowed number of users to import has been exceeded.',\n};\nAuthClientErrorCode.MISSING_UID = {\n    code: 'missing-uid',\n    message: 'A uid identifier is required for the current operation.',\n};\nAuthClientErrorCode.OPERATION_NOT_ALLOWED = {\n    code: 'operation-not-allowed',\n    message: 'The given sign-in provider is disabled for this Firebase project. ' +\n        'Enable it in the Firebase console, under the sign-in method tab of the ' +\n        'Auth section.',\n};\nAuthClientErrorCode.PHONE_NUMBER_ALREADY_EXISTS = {\n    code: 'phone-number-already-exists',\n    message: 'The user with the provided phone number already exists.',\n};\nAuthClientErrorCode.PROJECT_NOT_FOUND = {\n    code: 'project-not-found',\n    message: 'No Firebase project was found for the provided credential.',\n};\nAuthClientErrorCode.INSUFFICIENT_PERMISSION = {\n    code: 'insufficient-permission',\n    message: 'Credential implementation provided to initializeApp() via the \"credential\" property ' +\n        'has insufficient permission to access the requested resource. See ' +\n        'https://firebase.google.com/docs/admin/setup for details on how to authenticate this SDK ' +\n        'with appropriate permissions.',\n};\nAuthClientErrorCode.QUOTA_EXCEEDED = {\n    code: 'quota-exceeded',\n    message: 'The project quota for the specified operation has been exceeded.',\n};\nAuthClientErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED = {\n    code: 'second-factor-limit-exceeded',\n    message: 'The maximum number of allowed second factors on a user has been exceeded.',\n};\nAuthClientErrorCode.SECOND_FACTOR_UID_ALREADY_EXISTS = {\n    code: 'second-factor-uid-already-exists',\n    message: 'The specified second factor \"uid\" already exists.',\n};\nAuthClientErrorCode.SESSION_COOKIE_EXPIRED = {\n    code: 'session-cookie-expired',\n    message: 'The Firebase session cookie is expired.',\n};\nAuthClientErrorCode.SESSION_COOKIE_REVOKED = {\n    code: 'session-cookie-revoked',\n    message: 'The Firebase session cookie has been revoked.',\n};\nAuthClientErrorCode.TENANT_NOT_FOUND = {\n    code: 'tenant-not-found',\n    message: 'There is no tenant corresponding to the provided identifier.',\n};\nAuthClientErrorCode.UID_ALREADY_EXISTS = {\n    code: 'uid-already-exists',\n    message: 'The user with the provided uid already exists.',\n};\nAuthClientErrorCode.UNAUTHORIZED_DOMAIN = {\n    code: 'unauthorized-continue-uri',\n    message: 'The domain of the continue URL is not whitelisted. Whitelist the domain in the ' +\n        'Firebase console.',\n};\nAuthClientErrorCode.UNSUPPORTED_FIRST_FACTOR = {\n    code: 'unsupported-first-factor',\n    message: 'A multi-factor user requires a supported first factor.',\n};\nAuthClientErrorCode.UNSUPPORTED_SECOND_FACTOR = {\n    code: 'unsupported-second-factor',\n    message: 'The request specified an unsupported type of second factor.',\n};\nAuthClientErrorCode.UNSUPPORTED_TENANT_OPERATION = {\n    code: 'unsupported-tenant-operation',\n    message: 'This operation is not supported in a multi-tenant context.',\n};\nAuthClientErrorCode.UNVERIFIED_EMAIL = {\n    code: 'unverified-email',\n    message: 'A verified email is required for the specified action. For example, a multi-factor user ' +\n        'requires a verified email.',\n};\nAuthClientErrorCode.USER_NOT_FOUND = {\n    code: 'user-not-found',\n    message: 'There is no user record corresponding to the provided identifier.',\n};\nAuthClientErrorCode.NOT_FOUND = {\n    code: 'not-found',\n    message: 'The requested resource was not found.',\n};\nAuthClientErrorCode.USER_DISABLED = {\n    code: 'user-disabled',\n    message: 'The user record is disabled.',\n};\nAuthClientErrorCode.USER_NOT_DISABLED = {\n    code: 'user-not-disabled',\n    message: 'The user must be disabled in order to bulk delete it (or you must pass force=true).',\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ACTION = {\n    code: 'invalid-recaptcha-action',\n    message: 'reCAPTCHA action must be \"BLOCK\".'\n};\nAuthClientErrorCode.INVALID_RECAPTCHA_ENFORCEMENT_STATE = {\n    code: 'invalid-recaptcha-enforcement-state',\n    message: 'reCAPTCHA enforcement state must be either \"OFF\", \"AUDIT\" or \"ENFORCE\".'\n};\nAuthClientErrorCode.RECAPTCHA_NOT_ENABLED = {\n    code: 'racaptcha-not-enabled',\n    message: 'reCAPTCHA enterprise is not enabled.'\n};\n/**\n * Messaging client error codes and their default messages.\n */\nclass MessagingClientErrorCode {\n}\nexports.MessagingClientErrorCode = MessagingClientErrorCode;\nMessagingClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.',\n};\nMessagingClientErrorCode.INVALID_RECIPIENT = {\n    code: 'invalid-recipient',\n    message: 'Invalid message recipient provided.',\n};\nMessagingClientErrorCode.INVALID_PAYLOAD = {\n    code: 'invalid-payload',\n    message: 'Invalid message payload provided.',\n};\nMessagingClientErrorCode.INVALID_DATA_PAYLOAD_KEY = {\n    code: 'invalid-data-payload-key',\n    message: 'The data message payload contains an invalid key. See the reference documentation ' +\n        'for the DataMessagePayload type for restricted keys.',\n};\nMessagingClientErrorCode.PAYLOAD_SIZE_LIMIT_EXCEEDED = {\n    code: 'payload-size-limit-exceeded',\n    message: 'The provided message payload exceeds the FCM size limits. See the error documentation ' +\n        'for more details.',\n};\nMessagingClientErrorCode.INVALID_OPTIONS = {\n    code: 'invalid-options',\n    message: 'Invalid message options provided.',\n};\nMessagingClientErrorCode.INVALID_REGISTRATION_TOKEN = {\n    code: 'invalid-registration-token',\n    message: 'Invalid registration token provided. Make sure it matches the registration token ' +\n        'the client app receives from registering with FCM.',\n};\nMessagingClientErrorCode.REGISTRATION_TOKEN_NOT_REGISTERED = {\n    code: 'registration-token-not-registered',\n    message: 'The provided registration token is not registered. A previously valid registration ' +\n        'token can be unregistered for a variety of reasons. See the error documentation for more ' +\n        'details. Remove this registration token and stop using it to send messages.',\n};\nMessagingClientErrorCode.MISMATCHED_CREDENTIAL = {\n    code: 'mismatched-credential',\n    message: 'The credential used to authenticate this SDK does not have permission to send ' +\n        'messages to the device corresponding to the provided registration token. Make sure the ' +\n        'credential and registration token both belong to the same Firebase project.',\n};\nMessagingClientErrorCode.INVALID_PACKAGE_NAME = {\n    code: 'invalid-package-name',\n    message: 'The message was addressed to a registration token whose package name does not match ' +\n        'the provided \"restrictedPackageName\" option.',\n};\nMessagingClientErrorCode.DEVICE_MESSAGE_RATE_EXCEEDED = {\n    code: 'device-message-rate-exceeded',\n    message: 'The rate of messages to a particular device is too high. Reduce the number of ' +\n        'messages sent to this device and do not immediately retry sending to this device.',\n};\nMessagingClientErrorCode.TOPICS_MESSAGE_RATE_EXCEEDED = {\n    code: 'topics-message-rate-exceeded',\n    message: 'The rate of messages to subscribers to a particular topic is too high. Reduce the ' +\n        'number of messages sent for this topic, and do not immediately retry sending to this topic.',\n};\nMessagingClientErrorCode.MESSAGE_RATE_EXCEEDED = {\n    code: 'message-rate-exceeded',\n    message: 'Sending limit exceeded for the message target.',\n};\nMessagingClientErrorCode.THIRD_PARTY_AUTH_ERROR = {\n    code: 'third-party-auth-error',\n    message: 'A message targeted to an iOS device could not be sent because the required APNs ' +\n        'SSL certificate was not uploaded or has expired. Check the validity of your development ' +\n        'and production certificates.',\n};\nMessagingClientErrorCode.TOO_MANY_TOPICS = {\n    code: 'too-many-topics',\n    message: 'The maximum number of topics the provided registration token can be subscribed to ' +\n        'has been exceeded.',\n};\nMessagingClientErrorCode.AUTHENTICATION_ERROR = {\n    code: 'authentication-error',\n    message: 'An error occurred when trying to authenticate to the FCM servers. Make sure the ' +\n        'credential used to authenticate this SDK has the proper permissions. See ' +\n        'https://firebase.google.com/docs/admin/setup for setup instructions.',\n};\nMessagingClientErrorCode.SERVER_UNAVAILABLE = {\n    code: 'server-unavailable',\n    message: 'The FCM server could not process the request in time. See the error documentation ' +\n        'for more details.',\n};\nMessagingClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred. Please retry the request.',\n};\nMessagingClientErrorCode.UNKNOWN_ERROR = {\n    code: 'unknown-error',\n    message: 'An unknown server error was returned.',\n};\nclass InstallationsClientErrorCode {\n}\nexports.InstallationsClientErrorCode = InstallationsClientErrorCode;\nInstallationsClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.',\n};\nInstallationsClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid project ID provided.',\n};\nInstallationsClientErrorCode.INVALID_INSTALLATION_ID = {\n    code: 'invalid-installation-id',\n    message: 'Invalid installation ID provided.',\n};\nInstallationsClientErrorCode.API_ERROR = {\n    code: 'api-error',\n    message: 'Installation ID API call failed.',\n};\nclass InstanceIdClientErrorCode extends InstallationsClientErrorCode {\n}\nexports.InstanceIdClientErrorCode = InstanceIdClientErrorCode;\nInstanceIdClientErrorCode.INVALID_INSTANCE_ID = {\n    code: 'invalid-instance-id',\n    message: 'Invalid instance ID provided.',\n};\n/** @const {ServerToClientCode} Auth server to client enum error codes. */\nconst AUTH_SERVER_TO_CLIENT_CODE = {\n    // Feature being configured or used requires a billing account.\n    BILLING_NOT_ENABLED: 'BILLING_NOT_ENABLED',\n    // Claims payload is too large.\n    CLAIMS_TOO_LARGE: 'CLAIMS_TOO_LARGE',\n    // Configuration being added already exists.\n    CONFIGURATION_EXISTS: 'CONFIGURATION_EXISTS',\n    // Configuration not found.\n    CONFIGURATION_NOT_FOUND: 'CONFIGURATION_NOT_FOUND',\n    // Provided credential has insufficient permissions.\n    INSUFFICIENT_PERMISSION: 'INSUFFICIENT_PERMISSION',\n    // Provided configuration has invalid fields.\n    INVALID_CONFIG: 'INVALID_CONFIG',\n    // Provided configuration identifier is invalid.\n    INVALID_CONFIG_ID: 'INVALID_PROVIDER_ID',\n    // ActionCodeSettings missing continue URL.\n    INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n    // Dynamic link domain in provided ActionCodeSettings is not authorized.\n    INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n    // uploadAccount provides an email that already exists.\n    DUPLICATE_EMAIL: 'EMAIL_ALREADY_EXISTS',\n    // uploadAccount provides a localId that already exists.\n    DUPLICATE_LOCAL_ID: 'UID_ALREADY_EXISTS',\n    // Request specified a multi-factor enrollment ID that already exists.\n    DUPLICATE_MFA_ENROLLMENT_ID: 'SECOND_FACTOR_UID_ALREADY_EXISTS',\n    // setAccountInfo email already exists.\n    EMAIL_EXISTS: 'EMAIL_ALREADY_EXISTS',\n    // /accounts:sendOobCode for password reset when user is not found.\n    EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',\n    // Reserved claim name.\n    FORBIDDEN_CLAIM: 'FORBIDDEN_CLAIM',\n    // Invalid claims provided.\n    INVALID_CLAIMS: 'INVALID_CLAIMS',\n    // Invalid session cookie duration.\n    INVALID_DURATION: 'INVALID_SESSION_COOKIE_DURATION',\n    // Invalid email provided.\n    INVALID_EMAIL: 'INVALID_EMAIL',\n    // Invalid new email provided.\n    INVALID_NEW_EMAIL: 'INVALID_NEW_EMAIL',\n    // Invalid tenant display name. This can be thrown on CreateTenant and UpdateTenant.\n    INVALID_DISPLAY_NAME: 'INVALID_DISPLAY_NAME',\n    // Invalid ID token provided.\n    INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n    // Invalid tenant/parent resource name.\n    INVALID_NAME: 'INVALID_NAME',\n    // OIDC configuration has an invalid OAuth client ID.\n    INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n    // Invalid page token.\n    INVALID_PAGE_SELECTION: 'INVALID_PAGE_TOKEN',\n    // Invalid phone number.\n    INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n    // Invalid agent project. Either agent project doesn't exist or didn't enable multi-tenancy.\n    INVALID_PROJECT_ID: 'INVALID_PROJECT_ID',\n    // Invalid provider ID.\n    INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n    // Invalid service account.\n    INVALID_SERVICE_ACCOUNT: 'INVALID_SERVICE_ACCOUNT',\n    // Invalid testing phone number.\n    INVALID_TESTING_PHONE_NUMBER: 'INVALID_TESTING_PHONE_NUMBER',\n    // Invalid tenant type.\n    INVALID_TENANT_TYPE: 'INVALID_TENANT_TYPE',\n    // Missing Android package name.\n    MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n    // Missing configuration.\n    MISSING_CONFIG: 'MISSING_CONFIG',\n    // Missing configuration identifier.\n    MISSING_CONFIG_ID: 'MISSING_PROVIDER_ID',\n    // Missing tenant display name: This can be thrown on CreateTenant and UpdateTenant.\n    MISSING_DISPLAY_NAME: 'MISSING_DISPLAY_NAME',\n    // Email is required for the specified action. For example a multi-factor user requires\n    // a verified email.\n    MISSING_EMAIL: 'MISSING_EMAIL',\n    // Missing iOS bundle ID.\n    MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n    // Missing OIDC issuer.\n    MISSING_ISSUER: 'MISSING_ISSUER',\n    // No localId provided (deleteAccount missing localId).\n    MISSING_LOCAL_ID: 'MISSING_UID',\n    // OIDC configuration is missing an OAuth client ID.\n    MISSING_OAUTH_CLIENT_ID: 'MISSING_OAUTH_CLIENT_ID',\n    // Missing provider ID.\n    MISSING_PROVIDER_ID: 'MISSING_PROVIDER_ID',\n    // Missing SAML RP config.\n    MISSING_SAML_RELYING_PARTY_CONFIG: 'MISSING_SAML_RELYING_PARTY_CONFIG',\n    // Empty user list in uploadAccount.\n    MISSING_USER_ACCOUNT: 'MISSING_UID',\n    // Password auth disabled in console.\n    OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n    // Provided credential has insufficient permissions.\n    PERMISSION_DENIED: 'INSUFFICIENT_PERMISSION',\n    // Phone number already exists.\n    PHONE_NUMBER_EXISTS: 'PHONE_NUMBER_ALREADY_EXISTS',\n    // Project not found.\n    PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n    // In multi-tenancy context: project creation quota exceeded.\n    QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n    // Currently only 5 second factors can be set on the same user.\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'SECOND_FACTOR_LIMIT_EXCEEDED',\n    // Tenant not found.\n    TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n    // Tenant ID mismatch.\n    TENANT_ID_MISMATCH: 'MISMATCHING_TENANT_ID',\n    // Token expired error.\n    TOKEN_EXPIRED: 'ID_TOKEN_EXPIRED',\n    // Continue URL provided in ActionCodeSettings has a domain that is not whitelisted.\n    UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n    // A multi-factor user requires a supported first factor.\n    UNSUPPORTED_FIRST_FACTOR: 'UNSUPPORTED_FIRST_FACTOR',\n    // The request specified an unsupported type of second factor.\n    UNSUPPORTED_SECOND_FACTOR: 'UNSUPPORTED_SECOND_FACTOR',\n    // Operation is not supported in a multi-tenant context.\n    UNSUPPORTED_TENANT_OPERATION: 'UNSUPPORTED_TENANT_OPERATION',\n    // A verified email is required for the specified action. For example a multi-factor user\n    // requires a verified email.\n    UNVERIFIED_EMAIL: 'UNVERIFIED_EMAIL',\n    // User on which action is to be performed is not found.\n    USER_NOT_FOUND: 'USER_NOT_FOUND',\n    // User record is disabled.\n    USER_DISABLED: 'USER_DISABLED',\n    // Password provided is too weak.\n    WEAK_PASSWORD: 'INVALID_PASSWORD',\n    // Unrecognized reCAPTCHA action.\n    INVALID_RECAPTCHA_ACTION: 'INVALID_RECAPTCHA_ACTION',\n    // Unrecognized reCAPTCHA enforcement state.\n    INVALID_RECAPTCHA_ENFORCEMENT_STATE: 'INVALID_RECAPTCHA_ENFORCEMENT_STATE',\n    // reCAPTCHA is not enabled for account defender.\n    RECAPTCHA_NOT_ENABLED: 'RECAPTCHA_NOT_ENABLED'\n};\n/** @const {ServerToClientCode} Messaging server to client enum error codes. */\nconst MESSAGING_SERVER_TO_CLIENT_CODE = {\n    /* GENERIC ERRORS */\n    // Generic invalid message parameter provided.\n    InvalidParameters: 'INVALID_ARGUMENT',\n    // Mismatched sender ID.\n    MismatchSenderId: 'MISMATCHED_CREDENTIAL',\n    // FCM server unavailable.\n    Unavailable: 'SERVER_UNAVAILABLE',\n    // FCM server internal error.\n    InternalServerError: 'INTERNAL_ERROR',\n    /* SEND ERRORS */\n    // Invalid registration token format.\n    InvalidRegistration: 'INVALID_REGISTRATION_TOKEN',\n    // Registration token is not registered.\n    NotRegistered: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    // Registration token does not match restricted package name.\n    InvalidPackageName: 'INVALID_PACKAGE_NAME',\n    // Message payload size limit exceeded.\n    MessageTooBig: 'PAYLOAD_SIZE_LIMIT_EXCEEDED',\n    // Invalid key in the data message payload.\n    InvalidDataKey: 'INVALID_DATA_PAYLOAD_KEY',\n    // Invalid time to live option.\n    InvalidTtl: 'INVALID_OPTIONS',\n    // Device message rate exceeded.\n    DeviceMessageRateExceeded: 'DEVICE_MESSAGE_RATE_EXCEEDED',\n    // Topics message rate exceeded.\n    TopicsMessageRateExceeded: 'TOPICS_MESSAGE_RATE_EXCEEDED',\n    // Invalid APNs credentials.\n    InvalidApnsCredential: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 canonical error codes */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    PERMISSION_DENIED: 'MISMATCHED_CREDENTIAL',\n    RESOURCE_EXHAUSTED: 'MESSAGE_RATE_EXCEEDED',\n    UNAUTHENTICATED: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 new error codes */\n    APNS_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    INTERNAL: 'INTERNAL_ERROR',\n    INVALID_ARGUMENT: 'INVALID_ARGUMENT',\n    QUOTA_EXCEEDED: 'MESSAGE_RATE_EXCEEDED',\n    SENDER_ID_MISMATCH: 'MISMATCHED_CREDENTIAL',\n    THIRD_PARTY_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    UNAVAILABLE: 'SERVER_UNAVAILABLE',\n    UNREGISTERED: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    UNSPECIFIED_ERROR: 'UNKNOWN_ERROR',\n};\n/** @const {ServerToClientCode} Topic management (IID) server to client enum error codes. */\nconst TOPIC_MGT_SERVER_TO_CLIENT_CODE = {\n    /* TOPIC SUBSCRIPTION MANAGEMENT ERRORS */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    INVALID_ARGUMENT: 'INVALID_REGISTRATION_TOKEN',\n    TOO_MANY_TOPICS: 'TOO_MANY_TOPICS',\n    RESOURCE_EXHAUSTED: 'TOO_MANY_TOPICS',\n    PERMISSION_DENIED: 'AUTHENTICATION_ERROR',\n    DEADLINE_EXCEEDED: 'SERVER_UNAVAILABLE',\n    INTERNAL: 'INTERNAL_ERROR',\n    UNKNOWN: 'UNKNOWN_ERROR',\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}