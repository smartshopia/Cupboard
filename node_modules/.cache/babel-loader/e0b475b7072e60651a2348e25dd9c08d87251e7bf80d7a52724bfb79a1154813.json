{"ast":null,"code":"\"use strict\";\n\nmodule.exports = Reader;\nvar util = require(\"./util/minimal\");\nvar BufferReader; // cyclic\n\nvar LongBits = util.LongBits,\n  utf8 = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n  return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\nfunction Reader(buffer) {\n  /**\r\n   * Read buffer.\r\n   * @type {Uint8Array}\r\n   */\n  this.buf = buffer;\n\n  /**\r\n   * Read buffer position.\r\n   * @type {number}\r\n   */\n  this.pos = 0;\n\n  /**\r\n   * Read buffer length.\r\n   * @type {number}\r\n   */\n  this.len = buffer.length;\n}\nvar create_array = typeof Uint8Array !== \"undefined\" ? function create_typed_array(buffer) {\n  if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader(buffer);\n  throw Error(\"illegal buffer\");\n}\n/* istanbul ignore next */ : function create_array(buffer) {\n  if (Array.isArray(buffer)) return new Reader(buffer);\n  throw Error(\"illegal buffer\");\n};\nvar create = function create() {\n  return util.Buffer ? function create_buffer_setup(buffer) {\n    return (Reader.create = function create_buffer(buffer) {\n      return util.Buffer.isBuffer(buffer) ? new BufferReader(buffer)\n      /* istanbul ignore next */ : create_array(buffer);\n    })(buffer);\n  }\n  /* istanbul ignore next */ : create_array;\n};\n\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\nReader.create = create();\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */util.Array.prototype.slice;\n\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.uint32 = function read_uint32_setup() {\n  var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n  return function read_uint32() {\n    value = (this.buf[this.pos] & 127) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n\n    /* istanbul ignore if */\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len;\n      throw indexOutOfRange(this, 10);\n    }\n    return value;\n  };\n}();\n\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\nReader.prototype.int32 = function read_int32() {\n  return this.uint32() | 0;\n};\n\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\nReader.prototype.sint32 = function read_sint32() {\n  var value = this.uint32();\n  return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n  // tends to deopt with local vars for octet etc.\n  var bits = new LongBits(0, 0);\n  var i = 0;\n  if (this.len - this.pos > 4) {\n    // fast route (lo)\n    for (; i < 4; ++i) {\n      // 1st..4th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n    // 5th\n    bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n    bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n    if (this.buf[this.pos++] < 128) return bits;\n    i = 0;\n  } else {\n    for (; i < 3; ++i) {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this);\n      // 1st..3th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n    // 4th\n    bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n    return bits;\n  }\n  if (this.len - this.pos > 4) {\n    // fast route (hi)\n    for (; i < 5; ++i) {\n      // 6th..10th\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n  } else {\n    for (; i < 5; ++i) {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this);\n      // 6th..10th\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n  }\n  /* istanbul ignore next */\n  throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\nReader.prototype.bool = function read_bool() {\n  return this.uint32() !== 0;\n};\nfunction readFixed32_end(buf, end) {\n  // note that this uses `end`, not `pos`\n  return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;\n}\n\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\nReader.prototype.fixed32 = function read_fixed32() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64( /* this: Reader */\n) {\n  /* istanbul ignore if */\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);\n  return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.float = function read_float() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  var value = util.float.readFloatLE(this.buf, this.pos);\n  this.pos += 4;\n  return value;\n};\n\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.double = function read_double() {\n  /* istanbul ignore if */\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);\n  var value = util.float.readDoubleLE(this.buf, this.pos);\n  this.pos += 8;\n  return value;\n};\n\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\nReader.prototype.bytes = function read_bytes() {\n  var length = this.uint32(),\n    start = this.pos,\n    end = this.pos + length;\n\n  /* istanbul ignore if */\n  if (end > this.len) throw indexOutOfRange(this, length);\n  this.pos += length;\n  if (Array.isArray(this.buf))\n    // plain array\n    return this.buf.slice(start, end);\n  if (start === end) {\n    // fix for IE 10/Win8 and others' subarray returning array of size 1\n    var nativeBuffer = util.Buffer;\n    return nativeBuffer ? nativeBuffer.alloc(0) : new this.buf.constructor(0);\n  }\n  return this._slice.call(this.buf, start, end);\n};\n\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\nReader.prototype.string = function read_string() {\n  var bytes = this.bytes();\n  return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\nReader.prototype.skip = function skip(length) {\n  if (typeof length === \"number\") {\n    /* istanbul ignore if */\n    if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n    this.pos += length;\n  } else {\n    do {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this);\n    } while (this.buf[this.pos++] & 128);\n  }\n  return this;\n};\n\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\nReader.prototype.skipType = function (wireType) {\n  switch (wireType) {\n    case 0:\n      this.skip();\n      break;\n    case 1:\n      this.skip(8);\n      break;\n    case 2:\n      this.skip(this.uint32());\n      break;\n    case 3:\n      while ((wireType = this.uint32() & 7) !== 4) {\n        this.skipType(wireType);\n      }\n      break;\n    case 5:\n      this.skip(4);\n      break;\n\n    /* istanbul ignore next */\n    default:\n      throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n  }\n  return this;\n};\nReader._configure = function (BufferReader_) {\n  BufferReader = BufferReader_;\n  Reader.create = create();\n  BufferReader._configure();\n  var fn = util.Long ? \"toLong\" : /* istanbul ignore next */\"toNumber\";\n  util.merge(Reader.prototype, {\n    int64: function read_int64() {\n      return readLongVarint.call(this)[fn](false);\n    },\n    uint64: function read_uint64() {\n      return readLongVarint.call(this)[fn](true);\n    },\n    sint64: function read_sint64() {\n      return readLongVarint.call(this).zzDecode()[fn](false);\n    },\n    fixed64: function read_fixed64() {\n      return readFixed64.call(this)[fn](true);\n    },\n    sfixed64: function read_sfixed64() {\n      return readFixed64.call(this)[fn](false);\n    }\n  });\n};","map":{"version":3,"names":["module","exports","Reader","util","require","BufferReader","LongBits","utf8","indexOutOfRange","reader","writeLength","RangeError","pos","len","buffer","buf","length","create_array","Uint8Array","create_typed_array","Array","isArray","Error","create","Buffer","create_buffer_setup","create_buffer","isBuffer","prototype","_slice","subarray","slice","uint32","read_uint32_setup","value","read_uint32","int32","read_int32","sint32","read_sint32","readLongVarint","bits","i","lo","hi","bool","read_bool","readFixed32_end","end","fixed32","read_fixed32","sfixed32","read_sfixed32","readFixed64","float","read_float","readFloatLE","double","read_double","readDoubleLE","bytes","read_bytes","start","nativeBuffer","alloc","constructor","call","string","read_string","read","skip","skipType","wireType","_configure","BufferReader_","fn","Long","merge","int64","read_int64","uint64","read_uint64","sint64","read_sint64","zzDecode","fixed64","read_fixed64","sfixed64","read_sfixed64"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/protobufjs/src/reader.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup(buffer) {\r\n            return (Reader.create = function create_buffer(buffer) {\r\n                return util.Buffer.isBuffer(buffer)\r\n                    ? new BufferReader(buffer)\r\n                    /* istanbul ignore next */\r\n                    : create_array(buffer);\r\n            })(buffer);\r\n        }\r\n        /* istanbul ignore next */\r\n        : create_array;\r\n};\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = create();\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n\r\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        var nativeBuffer = util.Buffer;\r\n        return nativeBuffer\r\n            ? nativeBuffer.alloc(0)\r\n            : new this.buf.constructor(0);\r\n    }\r\n    return this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n    Reader.create = create();\r\n    BufferReader._configure();\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}