{"ast":null,"code":"'use strict';\n\nconst WritableStream = require('node:stream').Writable;\nconst {\n  inherits\n} = require('node:util');\nconst Dicer = require('../deps/dicer/lib/Dicer');\nconst MultipartParser = require('./types/multipart');\nconst UrlencodedParser = require('./types/urlencoded');\nconst parseParams = require('./utils/parseParams');\nfunction Busboy(opts) {\n  if (!(this instanceof Busboy)) {\n    return new Busboy(opts);\n  }\n  if (typeof opts !== 'object') {\n    throw new TypeError('Busboy expected an options-Object.');\n  }\n  if (typeof opts.headers !== 'object') {\n    throw new TypeError('Busboy expected an options-Object with headers-attribute.');\n  }\n  if (typeof opts.headers['content-type'] !== 'string') {\n    throw new TypeError('Missing Content-Type-header.');\n  }\n  const {\n    headers,\n    ...streamOptions\n  } = opts;\n  this.opts = {\n    autoDestroy: false,\n    ...streamOptions\n  };\n  WritableStream.call(this, this.opts);\n  this._done = false;\n  this._parser = this.getParserByHeaders(headers);\n  this._finished = false;\n}\ninherits(Busboy, WritableStream);\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser?.end();\n      return;\n    } else if (this._finished) {\n      return;\n    }\n    this._finished = true;\n  }\n  WritableStream.prototype.emit.apply(this, arguments);\n};\nBusboy.prototype.getParserByHeaders = function (headers) {\n  const parsed = parseParams(headers['content-type']);\n  const cfg = {\n    defCharset: this.opts.defCharset,\n    fileHwm: this.opts.fileHwm,\n    headers,\n    highWaterMark: this.opts.highWaterMark,\n    isPartAFile: this.opts.isPartAFile,\n    limits: this.opts.limits,\n    parsedConType: parsed,\n    preservePath: this.opts.preservePath\n  };\n  if (MultipartParser.detect.test(parsed[0])) {\n    return new MultipartParser(this, cfg);\n  }\n  if (UrlencodedParser.detect.test(parsed[0])) {\n    return new UrlencodedParser(this, cfg);\n  }\n  throw new Error('Unsupported Content-Type.');\n};\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  this._parser.write(chunk, cb);\n};\nmodule.exports = Busboy;\nmodule.exports.default = Busboy;\nmodule.exports.Busboy = Busboy;\nmodule.exports.Dicer = Dicer;","map":{"version":3,"names":["WritableStream","require","Writable","inherits","Dicer","MultipartParser","UrlencodedParser","parseParams","Busboy","opts","TypeError","headers","streamOptions","autoDestroy","call","_done","_parser","getParserByHeaders","_finished","prototype","emit","ev","end","apply","arguments","parsed","cfg","defCharset","fileHwm","highWaterMark","isPartAFile","limits","parsedConType","preservePath","detect","test","Error","_write","chunk","encoding","cb","write","module","exports","default"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/@fastify/busboy/lib/main.js"],"sourcesContent":["'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst { inherits } = require('node:util')\nconst Dicer = require('../deps/dicer/lib/Dicer')\n\nconst MultipartParser = require('./types/multipart')\nconst UrlencodedParser = require('./types/urlencoded')\nconst parseParams = require('./utils/parseParams')\n\nfunction Busboy (opts) {\n  if (!(this instanceof Busboy)) { return new Busboy(opts) }\n\n  if (typeof opts !== 'object') {\n    throw new TypeError('Busboy expected an options-Object.')\n  }\n  if (typeof opts.headers !== 'object') {\n    throw new TypeError('Busboy expected an options-Object with headers-attribute.')\n  }\n  if (typeof opts.headers['content-type'] !== 'string') {\n    throw new TypeError('Missing Content-Type-header.')\n  }\n\n  const {\n    headers,\n    ...streamOptions\n  } = opts\n\n  this.opts = {\n    autoDestroy: false,\n    ...streamOptions\n  }\n  WritableStream.call(this, this.opts)\n\n  this._done = false\n  this._parser = this.getParserByHeaders(headers)\n  this._finished = false\n}\ninherits(Busboy, WritableStream)\n\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser?.end()\n      return\n    } else if (this._finished) {\n      return\n    }\n    this._finished = true\n  }\n  WritableStream.prototype.emit.apply(this, arguments)\n}\n\nBusboy.prototype.getParserByHeaders = function (headers) {\n  const parsed = parseParams(headers['content-type'])\n\n  const cfg = {\n    defCharset: this.opts.defCharset,\n    fileHwm: this.opts.fileHwm,\n    headers,\n    highWaterMark: this.opts.highWaterMark,\n    isPartAFile: this.opts.isPartAFile,\n    limits: this.opts.limits,\n    parsedConType: parsed,\n    preservePath: this.opts.preservePath\n  }\n\n  if (MultipartParser.detect.test(parsed[0])) {\n    return new MultipartParser(this, cfg)\n  }\n  if (UrlencodedParser.detect.test(parsed[0])) {\n    return new UrlencodedParser(this, cfg)\n  }\n  throw new Error('Unsupported Content-Type.')\n}\n\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  this._parser.write(chunk, cb)\n}\n\nmodule.exports = Busboy\nmodule.exports.default = Busboy\nmodule.exports.Busboy = Busboy\n\nmodule.exports.Dicer = Dicer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}