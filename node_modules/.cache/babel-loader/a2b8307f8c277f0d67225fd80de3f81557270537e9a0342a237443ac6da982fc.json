{"ast":null,"code":"'use strict';\n\nconst RE_PLUS = /\\+/g;\nconst HEX = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nfunction Decoder() {\n  this.buffer = undefined;\n}\nDecoder.prototype.write = function (str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ');\n  let res = '';\n  let i = 0;\n  let p = 0;\n  const len = str.length;\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer;\n        this.buffer = undefined;\n        --i; // retry character\n      } else {\n        this.buffer += str[i];\n        ++p;\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16));\n          this.buffer = undefined;\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i);\n        p = i;\n      }\n      this.buffer = '';\n      ++p;\n    }\n  }\n  if (p < len && this.buffer === undefined) {\n    res += str.substring(p);\n  }\n  return res;\n};\nDecoder.prototype.reset = function () {\n  this.buffer = undefined;\n};\nmodule.exports = Decoder;","map":{"version":3,"names":["RE_PLUS","HEX","Decoder","buffer","undefined","prototype","write","str","replace","res","i","p","len","length","charCodeAt","String","fromCharCode","parseInt","substring","reset","module","exports"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/@fastify/busboy/lib/utils/Decoder.js"],"sourcesContent":["'use strict'\n\nconst RE_PLUS = /\\+/g\n\nconst HEX = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n]\n\nfunction Decoder () {\n  this.buffer = undefined\n}\nDecoder.prototype.write = function (str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ')\n  let res = ''\n  let i = 0; let p = 0; const len = str.length\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer\n        this.buffer = undefined\n        --i // retry character\n      } else {\n        this.buffer += str[i]\n        ++p\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16))\n          this.buffer = undefined\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i)\n        p = i\n      }\n      this.buffer = ''\n      ++p\n    }\n  }\n  if (p < len && this.buffer === undefined) { res += str.substring(p) }\n  return res\n}\nDecoder.prototype.reset = function () {\n  this.buffer = undefined\n}\n\nmodule.exports = Decoder\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}