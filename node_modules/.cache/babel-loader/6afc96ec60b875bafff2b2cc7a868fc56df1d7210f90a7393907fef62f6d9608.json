{"ast":null,"code":"\"use strict\";\n\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LRUCache_instances, _LRUCache_cache, _LRUCache_moveToEnd, _LRUCache_evict;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LRUCache = exports.originalOrCamelOptions = exports.snakeToCamel = void 0;\n/**\n * Returns the camel case of a provided string.\n *\n * @remarks\n *\n * Match any `_` and not `_` pair, then return the uppercase of the not `_`\n * character.\n *\n * @internal\n *\n * @param str the string to convert\n * @returns the camelCase'd string\n */\nfunction snakeToCamel(str) {\n  return str.replace(/([_][^_])/g, match => match.slice(1).toUpperCase());\n}\nexports.snakeToCamel = snakeToCamel;\n/**\n * Get the value of `obj[key]` or `obj[camelCaseKey]`, with a preference\n * for original, non-camelCase key.\n *\n * @param obj object to lookup a value in\n * @returns a `get` function for getting `obj[key || snakeKey]`, if available\n */\nfunction originalOrCamelOptions(obj) {\n  /**\n   *\n   * @param key an index of object, preferably snake_case\n   * @returns the value `obj[key || snakeKey]`, if available\n   */\n  function get(key) {\n    var _a;\n    const o = obj || {};\n    return (_a = o[key]) !== null && _a !== void 0 ? _a : o[snakeToCamel(key)];\n  }\n  return {\n    get\n  };\n}\nexports.originalOrCamelOptions = originalOrCamelOptions;\n/**\n * A simple LRU cache utility.\n * Not meant for external usage.\n *\n * @experimental\n * @internal\n */\nclass LRUCache {\n  constructor(options) {\n    _LRUCache_instances.add(this);\n    /**\n     * Maps are in order. Thus, the older item is the first item.\n     *\n     * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map}\n     */\n    _LRUCache_cache.set(this, new Map());\n    this.capacity = options.capacity;\n    this.maxAge = options.maxAge;\n  }\n  /**\n   * Add an item to the cache.\n   *\n   * @param key the key to upsert\n   * @param value the value of the key\n   */\n  set(key, value) {\n    __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_moveToEnd).call(this, key, value);\n    __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_evict).call(this);\n  }\n  /**\n   * Get an item from the cache.\n   *\n   * @param key the key to retrieve\n   */\n  get(key) {\n    const item = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").get(key);\n    if (!item) return;\n    __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_moveToEnd).call(this, key, item.value);\n    __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_evict).call(this);\n    return item.value;\n  }\n}\nexports.LRUCache = LRUCache;\n_LRUCache_cache = new WeakMap(), _LRUCache_instances = new WeakSet(), _LRUCache_moveToEnd = function _LRUCache_moveToEnd(key, value) {\n  __classPrivateFieldGet(this, _LRUCache_cache, \"f\").delete(key);\n  __classPrivateFieldGet(this, _LRUCache_cache, \"f\").set(key, {\n    value,\n    lastAccessed: Date.now()\n  });\n}, _LRUCache_evict = function _LRUCache_evict() {\n  const cutoffDate = this.maxAge ? Date.now() - this.maxAge : 0;\n  /**\n   * Because we know Maps are in order, this item is both the\n   * last item in the list (capacity) and oldest (maxAge).\n   */\n  let oldestItem = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").entries().next();\n  while (!oldestItem.done && (__classPrivateFieldGet(this, _LRUCache_cache, \"f\").size > this.capacity ||\n  // too many\n  oldestItem.value[1].lastAccessed < cutoffDate) // too old\n  ) {\n    __classPrivateFieldGet(this, _LRUCache_cache, \"f\").delete(oldestItem.value[0]);\n    oldestItem = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").entries().next();\n  }\n};","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_LRUCache_instances","_LRUCache_cache","_LRUCache_moveToEnd","_LRUCache_evict","Object","defineProperty","exports","LRUCache","originalOrCamelOptions","snakeToCamel","str","replace","match","slice","toUpperCase","obj","key","_a","o","constructor","options","add","set","Map","capacity","maxAge","item","WeakMap","WeakSet","delete","lastAccessed","Date","now","cutoffDate","oldestItem","entries","next","done","size"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/google-auth-library/build/src/util.js"],"sourcesContent":["\"use strict\";\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LRUCache_instances, _LRUCache_cache, _LRUCache_moveToEnd, _LRUCache_evict;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.originalOrCamelOptions = exports.snakeToCamel = void 0;\n/**\n * Returns the camel case of a provided string.\n *\n * @remarks\n *\n * Match any `_` and not `_` pair, then return the uppercase of the not `_`\n * character.\n *\n * @internal\n *\n * @param str the string to convert\n * @returns the camelCase'd string\n */\nfunction snakeToCamel(str) {\n    return str.replace(/([_][^_])/g, match => match.slice(1).toUpperCase());\n}\nexports.snakeToCamel = snakeToCamel;\n/**\n * Get the value of `obj[key]` or `obj[camelCaseKey]`, with a preference\n * for original, non-camelCase key.\n *\n * @param obj object to lookup a value in\n * @returns a `get` function for getting `obj[key || snakeKey]`, if available\n */\nfunction originalOrCamelOptions(obj) {\n    /**\n     *\n     * @param key an index of object, preferably snake_case\n     * @returns the value `obj[key || snakeKey]`, if available\n     */\n    function get(key) {\n        var _a;\n        const o = (obj || {});\n        return (_a = o[key]) !== null && _a !== void 0 ? _a : o[snakeToCamel(key)];\n    }\n    return { get };\n}\nexports.originalOrCamelOptions = originalOrCamelOptions;\n/**\n * A simple LRU cache utility.\n * Not meant for external usage.\n *\n * @experimental\n * @internal\n */\nclass LRUCache {\n    constructor(options) {\n        _LRUCache_instances.add(this);\n        /**\n         * Maps are in order. Thus, the older item is the first item.\n         *\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map}\n         */\n        _LRUCache_cache.set(this, new Map());\n        this.capacity = options.capacity;\n        this.maxAge = options.maxAge;\n    }\n    /**\n     * Add an item to the cache.\n     *\n     * @param key the key to upsert\n     * @param value the value of the key\n     */\n    set(key, value) {\n        __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_moveToEnd).call(this, key, value);\n        __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_evict).call(this);\n    }\n    /**\n     * Get an item from the cache.\n     *\n     * @param key the key to retrieve\n     */\n    get(key) {\n        const item = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").get(key);\n        if (!item)\n            return;\n        __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_moveToEnd).call(this, key, item.value);\n        __classPrivateFieldGet(this, _LRUCache_instances, \"m\", _LRUCache_evict).call(this);\n        return item.value;\n    }\n}\nexports.LRUCache = LRUCache;\n_LRUCache_cache = new WeakMap(), _LRUCache_instances = new WeakSet(), _LRUCache_moveToEnd = function _LRUCache_moveToEnd(key, value) {\n    __classPrivateFieldGet(this, _LRUCache_cache, \"f\").delete(key);\n    __classPrivateFieldGet(this, _LRUCache_cache, \"f\").set(key, {\n        value,\n        lastAccessed: Date.now(),\n    });\n}, _LRUCache_evict = function _LRUCache_evict() {\n    const cutoffDate = this.maxAge ? Date.now() - this.maxAge : 0;\n    /**\n     * Because we know Maps are in order, this item is both the\n     * last item in the list (capacity) and oldest (maxAge).\n     */\n    let oldestItem = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").entries().next();\n    while (!oldestItem.done &&\n        (__classPrivateFieldGet(this, _LRUCache_cache, \"f\").size > this.capacity || // too many\n            oldestItem.value[1].lastAccessed < cutoffDate) // too old\n    ) {\n        __classPrivateFieldGet(this, _LRUCache_cache, \"f\").delete(oldestItem.value[0]);\n        oldestItem = __classPrivateFieldGet(this, _LRUCache_cache, \"f\").entries().next();\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}