{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _GoogleToken_instances, _GoogleToken_inFlightRequest, _GoogleToken_getTokenAsync, _GoogleToken_getTokenAsyncInner, _GoogleToken_ensureEmail, _GoogleToken_revokeTokenAsync, _GoogleToken_configure, _GoogleToken_requestToken;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile ? (0, util_1.promisify)(fs.readFile) : async () => {\n  // if running in the web-browser, fs.readFile may not have been shimmed.\n  throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n};\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\nclass GoogleToken {\n  get accessToken() {\n    return this.rawToken ? this.rawToken.access_token : undefined;\n  }\n  get idToken() {\n    return this.rawToken ? this.rawToken.id_token : undefined;\n  }\n  get tokenType() {\n    return this.rawToken ? this.rawToken.token_type : undefined;\n  }\n  get refreshToken() {\n    return this.rawToken ? this.rawToken.refresh_token : undefined;\n  }\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  constructor(options) {\n    _GoogleToken_instances.add(this);\n    this.transporter = {\n      request: opts => (0, gaxios_1.request)(opts)\n    };\n    _GoogleToken_inFlightRequest.set(this, void 0);\n    __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, options);\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n  hasExpired() {\n    const now = new Date().getTime();\n    if (this.rawToken && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Returns whether the token will expire within eagerRefreshThresholdMillis\n   *\n   * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n   */\n  isTokenExpiring() {\n    var _a;\n    const now = new Date().getTime();\n    const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n    if (this.rawToken && this.expiresAt) {\n      return this.expiresAt <= now + eagerRefreshThresholdMillis;\n    } else {\n      return true;\n    }\n  }\n  getToken(callback, opts = {}) {\n    if (typeof callback === 'object') {\n      opts = callback;\n      callback = undefined;\n    }\n    opts = Object.assign({\n      forceRefresh: false\n    }, opts);\n    if (callback) {\n      const cb = callback;\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts).then(t => cb(null, t), callback);\n      return;\n    }\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts);\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n  async getCredentials(keyFile) {\n    const ext = path.extname(keyFile);\n    switch (ext) {\n      case '.json':\n        {\n          const key = await readFile(keyFile, 'utf8');\n          const body = JSON.parse(key);\n          const privateKey = body.private_key;\n          const clientEmail = body.client_email;\n          if (!privateKey || !clientEmail) {\n            throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n          }\n          return {\n            privateKey,\n            clientEmail\n          };\n        }\n      case '.der':\n      case '.crt':\n      case '.pem':\n        {\n          const privateKey = await readFile(keyFile, 'utf8');\n          return {\n            privateKey\n          };\n        }\n      case '.p12':\n      case '.pfx':\n        {\n          throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' + 'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n      default:\n        throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n    }\n  }\n  revokeToken(callback) {\n    if (callback) {\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this).then(() => callback(), callback);\n      return;\n    }\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this);\n  }\n}\nexports.GoogleToken = GoogleToken;\n_GoogleToken_inFlightRequest = new WeakMap(), _GoogleToken_instances = new WeakSet(), _GoogleToken_getTokenAsync = async function _GoogleToken_getTokenAsync(opts) {\n  if (__classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\") && !opts.forceRefresh) {\n    return __classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\");\n  }\n  try {\n    return await __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsyncInner).call(this, opts), \"f\");\n  } finally {\n    __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, undefined, \"f\");\n  }\n}, _GoogleToken_getTokenAsyncInner = async function _GoogleToken_getTokenAsyncInner(opts) {\n  if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n    return Promise.resolve(this.rawToken);\n  }\n  if (!this.key && !this.keyFile) {\n    throw new Error('No key or keyFile set.');\n  }\n  if (!this.key && this.keyFile) {\n    const creds = await this.getCredentials(this.keyFile);\n    this.key = creds.privateKey;\n    this.iss = creds.clientEmail || this.iss;\n    if (!creds.clientEmail) {\n      __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_ensureEmail).call(this);\n    }\n  }\n  return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_requestToken).call(this);\n}, _GoogleToken_ensureEmail = function _GoogleToken_ensureEmail() {\n  if (!this.iss) {\n    throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n  }\n}, _GoogleToken_revokeTokenAsync = async function _GoogleToken_revokeTokenAsync() {\n  if (!this.accessToken) {\n    throw new Error('No token to revoke.');\n  }\n  const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n  await this.transporter.request({\n    url,\n    retry: true\n  });\n  __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, {\n    email: this.iss,\n    sub: this.sub,\n    key: this.key,\n    keyFile: this.keyFile,\n    scope: this.scope,\n    additionalClaims: this.additionalClaims\n  });\n}, _GoogleToken_configure = function _GoogleToken_configure(options = {}) {\n  this.keyFile = options.keyFile;\n  this.key = options.key;\n  this.rawToken = undefined;\n  this.iss = options.email || options.iss;\n  this.sub = options.sub;\n  this.additionalClaims = options.additionalClaims;\n  if (typeof options.scope === 'object') {\n    this.scope = options.scope.join(' ');\n  } else {\n    this.scope = options.scope;\n  }\n  this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n  if (options.transporter) {\n    this.transporter = options.transporter;\n  }\n}, _GoogleToken_requestToken =\n/**\n * Request the token from Google.\n */\nasync function _GoogleToken_requestToken() {\n  var _a, _b;\n  const iat = Math.floor(new Date().getTime() / 1000);\n  const additionalClaims = this.additionalClaims || {};\n  const payload = Object.assign({\n    iss: this.iss,\n    scope: this.scope,\n    aud: GOOGLE_TOKEN_URL,\n    exp: iat + 3600,\n    iat,\n    sub: this.sub\n  }, additionalClaims);\n  const signedJWT = jws.sign({\n    header: {\n      alg: 'RS256'\n    },\n    payload,\n    secret: this.key\n  });\n  try {\n    const r = await this.transporter.request({\n      method: 'POST',\n      url: GOOGLE_TOKEN_URL,\n      data: {\n        grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n        assertion: signedJWT\n      },\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      responseType: 'json',\n      retryConfig: {\n        httpMethodsToRetry: ['POST']\n      }\n    });\n    this.rawToken = r.data;\n    this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n    return this.rawToken;\n  } catch (e) {\n    this.rawToken = undefined;\n    this.tokenExpires = undefined;\n    const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data) ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data : {};\n    if (body.error) {\n      const desc = body.error_description ? `: ${body.error_description}` : '';\n      e.message = `${body.error}${desc}`;\n    }\n    throw e;\n  }\n};","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","_GoogleToken_instances","_GoogleToken_inFlightRequest","_GoogleToken_getTokenAsync","_GoogleToken_getTokenAsyncInner","_GoogleToken_ensureEmail","_GoogleToken_revokeTokenAsync","_GoogleToken_configure","_GoogleToken_requestToken","Object","defineProperty","exports","GoogleToken","fs","require","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","Error","constructor","message","code","accessToken","rawToken","access_token","undefined","idToken","id_token","tokenType","token_type","refreshToken","refresh_token","options","add","transporter","request","opts","hasExpired","now","Date","getTime","expiresAt","isTokenExpiring","_a","eagerRefreshThresholdMillis","getToken","callback","assign","forceRefresh","cb","then","t","getCredentials","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","revokeToken","WeakMap","WeakSet","Promise","resolve","creds","iss","url","retry","email","sub","scope","additionalClaims","join","_b","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","r","method","data","grant_type","assertion","headers","responseType","retryConfig","httpMethodsToRetry","expires_in","e","tokenExpires","response","error","desc","error_description"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/gtoken/build/src/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _GoogleToken_instances, _GoogleToken_inFlightRequest, _GoogleToken_getTokenAsync, _GoogleToken_getTokenAsyncInner, _GoogleToken_ensureEmail, _GoogleToken_revokeTokenAsync, _GoogleToken_configure, _GoogleToken_requestToken;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? (0, util_1.promisify)(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nclass GoogleToken {\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        _GoogleToken_instances.add(this);\n        this.transporter = {\n            request: opts => (0, gaxios_1.request)(opts),\n        };\n        _GoogleToken_inFlightRequest.set(this, void 0);\n        __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, options);\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsync).call(this, opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                throw new ErrorWithCode('*.p12 certificates are not supported after v6.1.2. ' +\n                    'Consider utilizing *.json format or converting *.p12 to *.pem using the OpenSSL CLI.', 'UNKNOWN_CERTIFICATE_TYPE');\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, and *.pem.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this).then(() => callback(), callback);\n            return;\n        }\n        return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_revokeTokenAsync).call(this);\n    }\n}\nexports.GoogleToken = GoogleToken;\n_GoogleToken_inFlightRequest = new WeakMap(), _GoogleToken_instances = new WeakSet(), _GoogleToken_getTokenAsync = async function _GoogleToken_getTokenAsync(opts) {\n    if (__classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\") && !opts.forceRefresh) {\n        return __classPrivateFieldGet(this, _GoogleToken_inFlightRequest, \"f\");\n    }\n    try {\n        return await (__classPrivateFieldSet(this, _GoogleToken_inFlightRequest, __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_getTokenAsyncInner).call(this, opts), \"f\"));\n    }\n    finally {\n        __classPrivateFieldSet(this, _GoogleToken_inFlightRequest, undefined, \"f\");\n    }\n}, _GoogleToken_getTokenAsyncInner = async function _GoogleToken_getTokenAsyncInner(opts) {\n    if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n        return Promise.resolve(this.rawToken);\n    }\n    if (!this.key && !this.keyFile) {\n        throw new Error('No key or keyFile set.');\n    }\n    if (!this.key && this.keyFile) {\n        const creds = await this.getCredentials(this.keyFile);\n        this.key = creds.privateKey;\n        this.iss = creds.clientEmail || this.iss;\n        if (!creds.clientEmail) {\n            __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_ensureEmail).call(this);\n        }\n    }\n    return __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_requestToken).call(this);\n}, _GoogleToken_ensureEmail = function _GoogleToken_ensureEmail() {\n    if (!this.iss) {\n        throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n}, _GoogleToken_revokeTokenAsync = async function _GoogleToken_revokeTokenAsync() {\n    if (!this.accessToken) {\n        throw new Error('No token to revoke.');\n    }\n    const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n    await this.transporter.request({\n        url,\n        retry: true,\n    });\n    __classPrivateFieldGet(this, _GoogleToken_instances, \"m\", _GoogleToken_configure).call(this, {\n        email: this.iss,\n        sub: this.sub,\n        key: this.key,\n        keyFile: this.keyFile,\n        scope: this.scope,\n        additionalClaims: this.additionalClaims,\n    });\n}, _GoogleToken_configure = function _GoogleToken_configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.rawToken = undefined;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n    if (typeof options.scope === 'object') {\n        this.scope = options.scope.join(' ');\n    }\n    else {\n        this.scope = options.scope;\n    }\n    this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    if (options.transporter) {\n        this.transporter = options.transporter;\n    }\n}, _GoogleToken_requestToken = \n/**\n * Request the token from Google.\n */\nasync function _GoogleToken_requestToken() {\n    var _a, _b;\n    const iat = Math.floor(new Date().getTime() / 1000);\n    const additionalClaims = this.additionalClaims || {};\n    const payload = Object.assign({\n        iss: this.iss,\n        scope: this.scope,\n        aud: GOOGLE_TOKEN_URL,\n        exp: iat + 3600,\n        iat,\n        sub: this.sub,\n    }, additionalClaims);\n    const signedJWT = jws.sign({\n        header: { alg: 'RS256' },\n        payload,\n        secret: this.key,\n    });\n    try {\n        const r = await this.transporter.request({\n            method: 'POST',\n            url: GOOGLE_TOKEN_URL,\n            data: {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: signedJWT,\n            },\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            responseType: 'json',\n            retryConfig: {\n                httpMethodsToRetry: ['POST'],\n            },\n        });\n        this.rawToken = r.data;\n        this.expiresAt =\n            r.data.expires_in === null || r.data.expires_in === undefined\n                ? undefined\n                : (iat + r.data.expires_in) * 1000;\n        return this.rawToken;\n    }\n    catch (e) {\n        this.rawToken = undefined;\n        this.tokenExpires = undefined;\n        const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data)\n            ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data\n            : {};\n        if (body.error) {\n            const desc = body.error_description\n                ? `: ${body.error_description}`\n                : '';\n            e.message = `${body.error}${desc}`;\n        }\n        throw e;\n    }\n};\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}