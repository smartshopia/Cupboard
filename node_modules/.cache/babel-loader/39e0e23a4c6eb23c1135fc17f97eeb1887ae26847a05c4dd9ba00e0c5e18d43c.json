{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATTA UR REHMAN\\\\Music\\\\Fida\\\\Cupboard\\\\src\\\\components\\\\Inventory\\\\Inventory.js\",\n  _s = $RefreshSig$();\n// src/components/Inventory/Inventory.js\nimport React, { useEffect, useState } from 'react';\nimport { firestore } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [inventoryItems, setInventoryItems] = useState([]);\n  useEffect(() => {\n    const fetchInventoryItems = async () => {\n      try {\n        const snapshot = await firestore.collection('inventory').get();\n        const itemsList = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setInventoryItems(itemsList);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching inventory items: ', error);\n        setIsLoading(false);\n        // Handle error state if needed\n      }\n    };\n    fetchInventoryItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: inventoryItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), \" \", item.name, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 52\n        }, this), \" \", item.quantity]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"kPzUinhIORCImeI5aZrKQgiJKig=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","firestore","jsxDEV","_jsxDEV","Inventory","_s","isLoading","setIsLoading","inventoryItems","setInventoryItems","fetchInventoryItems","snapshot","collection","get","itemsList","docs","map","doc","id","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","item","name","quantity","_c","$RefreshReg$"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/src/components/Inventory/Inventory.js"],"sourcesContent":["// src/components/Inventory/Inventory.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { firestore } from '../../firebase';\r\n\r\nconst Inventory = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [inventoryItems, setInventoryItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchInventoryItems = async () => {\r\n      try {\r\n        const snapshot = await firestore.collection('inventory').get();\r\n        const itemsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setInventoryItems(itemsList);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching inventory items: ', error);\r\n        setIsLoading(false);\r\n        // Handle error state if needed\r\n      }\r\n    };\r\n\r\n    fetchInventoryItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Inventory</h2>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ul>\r\n          {inventoryItems.map(item => (\r\n            <li key={item.id}>\r\n              <strong>Name:</strong> {item.name} | <strong>Quantity:</strong> {item.quantity}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,SAAS,CAACW,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,CAAC;QAC9D,MAAMC,SAAS,GAAGH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;UAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;QAC3EV,iBAAiB,CAACK,SAAS,CAAC;QAC5BP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDb,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAEDG,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBpB,SAAS,gBACRH,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBvB,OAAA;MAAAmB,QAAA,EACGd,cAAc,CAACQ,GAAG,CAACW,IAAI,iBACtBxB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACC,IAAI,CAACC,IAAI,EAAC,KAAG,eAAAzB,OAAA;UAAAmB,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACC,IAAI,CAACE,QAAQ;MAAA,GADvEF,IAAI,CAACT,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}