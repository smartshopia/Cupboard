{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2024 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldFilterInternal = void 0;\nconst deepEqual = require(\"fast-deep-equal\");\nconst filter_internal_1 = require(\"./filter-internal\");\n/**\n * A field constraint for a Query where clause.\n *\n * @private\n * @internal\n * @class\n */\nclass FieldFilterInternal extends filter_internal_1.FilterInternal {\n  getFlattenedFilters() {\n    return [this];\n  }\n  getFilters() {\n    return [this];\n  }\n  /**\n   * @param serializer The Firestore serializer\n   * @param field The path of the property value to compare.\n   * @param op A comparison operation.\n   * @param value The value to which to compare the field for inclusion in a\n   * query.\n   */\n  constructor(serializer, field, op, value) {\n    super();\n    this.serializer = serializer;\n    this.field = field;\n    this.op = op;\n    this.value = value;\n  }\n  /**\n   * Returns whether this FieldFilter uses an equals comparison.\n   *\n   * @private\n   * @internal\n   */\n  isInequalityFilter() {\n    switch (this.op) {\n      case 'GREATER_THAN':\n      case 'GREATER_THAN_OR_EQUAL':\n      case 'LESS_THAN':\n      case 'LESS_THAN_OR_EQUAL':\n      case 'NOT_EQUAL':\n      case 'NOT_IN':\n        return true;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Generates the proto representation for this field filter.\n   *\n   * @private\n   * @internal\n   */\n  toProto() {\n    if (typeof this.value === 'number' && isNaN(this.value)) {\n      return {\n        unaryFilter: {\n          field: {\n            fieldPath: this.field.formattedName\n          },\n          op: this.op === 'EQUAL' ? 'IS_NAN' : 'IS_NOT_NAN'\n        }\n      };\n    }\n    if (this.value === null) {\n      return {\n        unaryFilter: {\n          field: {\n            fieldPath: this.field.formattedName\n          },\n          op: this.op === 'EQUAL' ? 'IS_NULL' : 'IS_NOT_NULL'\n        }\n      };\n    }\n    return {\n      fieldFilter: {\n        field: {\n          fieldPath: this.field.formattedName\n        },\n        op: this.op,\n        value: this.serializer.encodeValue(this.value)\n      }\n    };\n  }\n  isEqual(other) {\n    return other instanceof FieldFilterInternal && this.field.isEqual(other.field) && this.op === other.op && deepEqual(this.value, other.value);\n  }\n}\nexports.FieldFilterInternal = FieldFilterInternal;","map":{"version":3,"names":["Object","defineProperty","exports","value","FieldFilterInternal","deepEqual","require","filter_internal_1","FilterInternal","getFlattenedFilters","getFilters","constructor","serializer","field","op","isInequalityFilter","toProto","isNaN","unaryFilter","fieldPath","formattedName","fieldFilter","encodeValue","isEqual","other"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/@google-cloud/firestore/build/src/reference/field-filter-internal.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2024 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldFilterInternal = void 0;\nconst deepEqual = require(\"fast-deep-equal\");\nconst filter_internal_1 = require(\"./filter-internal\");\n/**\n * A field constraint for a Query where clause.\n *\n * @private\n * @internal\n * @class\n */\nclass FieldFilterInternal extends filter_internal_1.FilterInternal {\n    getFlattenedFilters() {\n        return [this];\n    }\n    getFilters() {\n        return [this];\n    }\n    /**\n     * @param serializer The Firestore serializer\n     * @param field The path of the property value to compare.\n     * @param op A comparison operation.\n     * @param value The value to which to compare the field for inclusion in a\n     * query.\n     */\n    constructor(serializer, field, op, value) {\n        super();\n        this.serializer = serializer;\n        this.field = field;\n        this.op = op;\n        this.value = value;\n    }\n    /**\n     * Returns whether this FieldFilter uses an equals comparison.\n     *\n     * @private\n     * @internal\n     */\n    isInequalityFilter() {\n        switch (this.op) {\n            case 'GREATER_THAN':\n            case 'GREATER_THAN_OR_EQUAL':\n            case 'LESS_THAN':\n            case 'LESS_THAN_OR_EQUAL':\n            case 'NOT_EQUAL':\n            case 'NOT_IN':\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Generates the proto representation for this field filter.\n     *\n     * @private\n     * @internal\n     */\n    toProto() {\n        if (typeof this.value === 'number' && isNaN(this.value)) {\n            return {\n                unaryFilter: {\n                    field: {\n                        fieldPath: this.field.formattedName,\n                    },\n                    op: this.op === 'EQUAL' ? 'IS_NAN' : 'IS_NOT_NAN',\n                },\n            };\n        }\n        if (this.value === null) {\n            return {\n                unaryFilter: {\n                    field: {\n                        fieldPath: this.field.formattedName,\n                    },\n                    op: this.op === 'EQUAL' ? 'IS_NULL' : 'IS_NOT_NULL',\n                },\n            };\n        }\n        return {\n            fieldFilter: {\n                field: {\n                    fieldPath: this.field.formattedName,\n                },\n                op: this.op,\n                value: this.serializer.encodeValue(this.value),\n            },\n        };\n    }\n    isEqual(other) {\n        return (other instanceof FieldFilterInternal &&\n            this.field.isEqual(other.field) &&\n            this.op === other.op &&\n            deepEqual(this.value, other.value));\n    }\n}\nexports.FieldFilterInternal = FieldFilterInternal;\n//# sourceMappingURL=field-filter-internal.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,mBAAmB,SAASG,iBAAiB,CAACC,cAAc,CAAC;EAC/DC,mBAAmBA,CAAA,EAAG;IAClB,OAAO,CAAC,IAAI,CAAC;EACjB;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,CAAC,IAAI,CAAC;EACjB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,UAAU,EAAEC,KAAK,EAAEC,EAAE,EAAEX,KAAK,EAAE;IACtC,KAAK,CAAC,CAAC;IACP,IAAI,CAACS,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACX,KAAK,GAAGA,KAAK;EACtB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIY,kBAAkBA,CAAA,EAAG;IACjB,QAAQ,IAAI,CAACD,EAAE;MACX,KAAK,cAAc;MACnB,KAAK,uBAAuB;MAC5B,KAAK,WAAW;MAChB,KAAK,oBAAoB;MACzB,KAAK,WAAW;MAChB,KAAK,QAAQ;QACT,OAAO,IAAI;MACf;QACI,OAAO,KAAK;IACpB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACIE,OAAOA,CAAA,EAAG;IACN,IAAI,OAAO,IAAI,CAACb,KAAK,KAAK,QAAQ,IAAIc,KAAK,CAAC,IAAI,CAACd,KAAK,CAAC,EAAE;MACrD,OAAO;QACHe,WAAW,EAAE;UACTL,KAAK,EAAE;YACHM,SAAS,EAAE,IAAI,CAACN,KAAK,CAACO;UAC1B,CAAC;UACDN,EAAE,EAAE,IAAI,CAACA,EAAE,KAAK,OAAO,GAAG,QAAQ,GAAG;QACzC;MACJ,CAAC;IACL;IACA,IAAI,IAAI,CAACX,KAAK,KAAK,IAAI,EAAE;MACrB,OAAO;QACHe,WAAW,EAAE;UACTL,KAAK,EAAE;YACHM,SAAS,EAAE,IAAI,CAACN,KAAK,CAACO;UAC1B,CAAC;UACDN,EAAE,EAAE,IAAI,CAACA,EAAE,KAAK,OAAO,GAAG,SAAS,GAAG;QAC1C;MACJ,CAAC;IACL;IACA,OAAO;MACHO,WAAW,EAAE;QACTR,KAAK,EAAE;UACHM,SAAS,EAAE,IAAI,CAACN,KAAK,CAACO;QAC1B,CAAC;QACDN,EAAE,EAAE,IAAI,CAACA,EAAE;QACXX,KAAK,EAAE,IAAI,CAACS,UAAU,CAACU,WAAW,CAAC,IAAI,CAACnB,KAAK;MACjD;IACJ,CAAC;EACL;EACAoB,OAAOA,CAACC,KAAK,EAAE;IACX,OAAQA,KAAK,YAAYpB,mBAAmB,IACxC,IAAI,CAACS,KAAK,CAACU,OAAO,CAACC,KAAK,CAACX,KAAK,CAAC,IAC/B,IAAI,CAACC,EAAE,KAAKU,KAAK,CAACV,EAAE,IACpBT,SAAS,CAAC,IAAI,CAACF,KAAK,EAAEqB,KAAK,CAACrB,KAAK,CAAC;EAC1C;AACJ;AACAD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}