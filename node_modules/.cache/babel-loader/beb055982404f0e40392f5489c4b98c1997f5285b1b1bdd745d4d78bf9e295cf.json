{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRetryConfig = getRetryConfig;\nasync function getRetryConfig(err) {\n  let config = getConfig(err);\n  if (!err || !err.config || !config && !err.config.retry) {\n    return {\n      shouldRetry: false\n    };\n  }\n  config = config || {};\n  config.currentRetryAttempt = config.currentRetryAttempt || 0;\n  config.retry = config.retry === undefined || config.retry === null ? 3 : config.retry;\n  config.httpMethodsToRetry = config.httpMethodsToRetry || ['GET', 'HEAD', 'PUT', 'OPTIONS', 'DELETE'];\n  config.noResponseRetries = config.noResponseRetries === undefined || config.noResponseRetries === null ? 2 : config.noResponseRetries;\n  config.retryDelayMultiplier = config.retryDelayMultiplier ? config.retryDelayMultiplier : 2;\n  config.timeOfFirstRequest = config.timeOfFirstRequest ? config.timeOfFirstRequest : Date.now();\n  config.totalTimeout = config.totalTimeout ? config.totalTimeout : Number.MAX_SAFE_INTEGER;\n  config.maxRetryDelay = config.maxRetryDelay ? config.maxRetryDelay : Number.MAX_SAFE_INTEGER;\n  // If this wasn't in the list of status codes where we want\n  // to automatically retry, return.\n  const retryRanges = [\n  // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n  // 1xx - Retry (Informational, request still processing)\n  // 2xx - Do not retry (Success)\n  // 3xx - Do not retry (Redirect)\n  // 4xx - Do not retry (Client errors)\n  // 408 - Retry (\"Request Timeout\")\n  // 429 - Retry (\"Too Many Requests\")\n  // 5xx - Retry (Server errors)\n  [100, 199], [408, 408], [429, 429], [500, 599]];\n  config.statusCodesToRetry = config.statusCodesToRetry || retryRanges;\n  // Put the config back into the err\n  err.config.retryConfig = config;\n  // Determine if we should retry the request\n  const shouldRetryFn = config.shouldRetry || shouldRetryRequest;\n  if (!(await shouldRetryFn(err))) {\n    return {\n      shouldRetry: false,\n      config: err.config\n    };\n  }\n  const delay = getNextRetryDelay(config);\n  // We're going to retry!  Incremenent the counter.\n  err.config.retryConfig.currentRetryAttempt += 1;\n  // Create a promise that invokes the retry after the backOffDelay\n  const backoff = config.retryBackoff ? config.retryBackoff(err, delay) : new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n  // Notify the user if they added an `onRetryAttempt` handler\n  if (config.onRetryAttempt) {\n    config.onRetryAttempt(err);\n  }\n  // Return the promise in which recalls Gaxios to retry the request\n  await backoff;\n  return {\n    shouldRetry: true,\n    config: err.config\n  };\n}\n/**\n * Determine based on config if we should retry the request.\n * @param err The GaxiosError passed to the interceptor.\n */\nfunction shouldRetryRequest(err) {\n  var _a;\n  const config = getConfig(err);\n  // node-fetch raises an AbortError if signaled:\n  // https://github.com/bitinn/node-fetch#request-cancellation-with-abortsignal\n  if (err.name === 'AbortError' || ((_a = err.error) === null || _a === void 0 ? void 0 : _a.name) === 'AbortError') {\n    return false;\n  }\n  // If there's no config, or retries are disabled, return.\n  if (!config || config.retry === 0) {\n    return false;\n  }\n  // Check if this error has no response (ETIMEDOUT, ENOTFOUND, etc)\n  if (!err.response && (config.currentRetryAttempt || 0) >= config.noResponseRetries) {\n    return false;\n  }\n  // Only retry with configured HttpMethods.\n  if (!err.config.method || config.httpMethodsToRetry.indexOf(err.config.method.toUpperCase()) < 0) {\n    return false;\n  }\n  // If this wasn't in the list of status codes where we want\n  // to automatically retry, return.\n  if (err.response && err.response.status) {\n    let isInRange = false;\n    for (const [min, max] of config.statusCodesToRetry) {\n      const status = err.response.status;\n      if (status >= min && status <= max) {\n        isInRange = true;\n        break;\n      }\n    }\n    if (!isInRange) {\n      return false;\n    }\n  }\n  // If we are out of retry attempts, return\n  config.currentRetryAttempt = config.currentRetryAttempt || 0;\n  if (config.currentRetryAttempt >= config.retry) {\n    return false;\n  }\n  return true;\n}\n/**\n * Acquire the raxConfig object from an GaxiosError if available.\n * @param err The Gaxios error with a config object.\n */\nfunction getConfig(err) {\n  if (err && err.config && err.config.retryConfig) {\n    return err.config.retryConfig;\n  }\n  return;\n}\n/**\n * Gets the delay to wait before the next retry.\n *\n * @param {RetryConfig} config The current set of retry options\n * @returns {number} the amount of ms to wait before the next retry attempt.\n */\nfunction getNextRetryDelay(config) {\n  var _a;\n  // Calculate time to wait with exponential backoff.\n  // If this is the first retry, look for a configured retryDelay.\n  const retryDelay = config.currentRetryAttempt ? 0 : (_a = config.retryDelay) !== null && _a !== void 0 ? _a : 100;\n  // Formula: retryDelay + ((retryDelayMultiplier^currentRetryAttempt - 1 / 2) * 1000)\n  const calculatedDelay = retryDelay + (Math.pow(config.retryDelayMultiplier, config.currentRetryAttempt) - 1) / 2 * 1000;\n  const maxAllowableDelay = config.totalTimeout - (Date.now() - config.timeOfFirstRequest);\n  return Math.min(calculatedDelay, maxAllowableDelay, config.maxRetryDelay);\n}","map":{"version":3,"names":["exports","getRetryConfig","err","config","getConfig","retry","shouldRetry","currentRetryAttempt","undefined","httpMethodsToRetry","noResponseRetries","retryDelayMultiplier","timeOfFirstRequest","Date","now","totalTimeout","Number","MAX_SAFE_INTEGER","maxRetryDelay","retryRanges","statusCodesToRetry","retryConfig","shouldRetryFn","shouldRetryRequest","delay","getNextRetryDelay","backoff","retryBackoff","Promise","resolve","setTimeout","onRetryAttempt","name","_a","error","response","method","indexOf","toUpperCase","status","isInRange","min","max","retryDelay","calculatedDelay","Math","pow","maxAllowableDelay"],"sources":["../../src/retry.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}