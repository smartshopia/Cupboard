{"ast":null,"code":"\"use strict\";\n\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidSubjectTokenError = exports.InvalidMessageFieldError = exports.InvalidCodeFieldError = exports.InvalidTokenTypeFieldError = exports.InvalidExpirationTimeFieldError = exports.InvalidSuccessFieldError = exports.InvalidVersionFieldError = exports.ExecutableResponseError = exports.ExecutableResponse = void 0;\nconst SAML_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:saml2';\nconst OIDC_SUBJECT_TOKEN_TYPE1 = 'urn:ietf:params:oauth:token-type:id_token';\nconst OIDC_SUBJECT_TOKEN_TYPE2 = 'urn:ietf:params:oauth:token-type:jwt';\n/**\n * Defines the response of a 3rd party executable run by the pluggable auth client.\n */\nclass ExecutableResponse {\n  /**\n   * Instantiates an ExecutableResponse instance using the provided JSON object\n   * from the output of the executable.\n   * @param responseJson Response from a 3rd party executable, loaded from a\n   * run of the executable or a cached output file.\n   */\n  constructor(responseJson) {\n    // Check that the required fields exist in the json response.\n    if (!responseJson.version) {\n      throw new InvalidVersionFieldError(\"Executable response must contain a 'version' field.\");\n    }\n    if (responseJson.success === undefined) {\n      throw new InvalidSuccessFieldError(\"Executable response must contain a 'success' field.\");\n    }\n    this.version = responseJson.version;\n    this.success = responseJson.success;\n    // Validate required fields for a successful response.\n    if (this.success) {\n      this.expirationTime = responseJson.expiration_time;\n      this.tokenType = responseJson.token_type;\n      // Validate token type field.\n      if (this.tokenType !== SAML_SUBJECT_TOKEN_TYPE && this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE1 && this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE2) {\n        throw new InvalidTokenTypeFieldError(\"Executable response must contain a 'token_type' field when successful \" + `and it must be one of ${OIDC_SUBJECT_TOKEN_TYPE1}, ${OIDC_SUBJECT_TOKEN_TYPE2}, or ${SAML_SUBJECT_TOKEN_TYPE}.`);\n      }\n      // Validate subject token.\n      if (this.tokenType === SAML_SUBJECT_TOKEN_TYPE) {\n        if (!responseJson.saml_response) {\n          throw new InvalidSubjectTokenError(`Executable response must contain a 'saml_response' field when token_type=${SAML_SUBJECT_TOKEN_TYPE}.`);\n        }\n        this.subjectToken = responseJson.saml_response;\n      } else {\n        if (!responseJson.id_token) {\n          throw new InvalidSubjectTokenError(\"Executable response must contain a 'id_token' field when \" + `token_type=${OIDC_SUBJECT_TOKEN_TYPE1} or ${OIDC_SUBJECT_TOKEN_TYPE2}.`);\n        }\n        this.subjectToken = responseJson.id_token;\n      }\n    } else {\n      // Both code and message must be provided for unsuccessful responses.\n      if (!responseJson.code) {\n        throw new InvalidCodeFieldError(\"Executable response must contain a 'code' field when unsuccessful.\");\n      }\n      if (!responseJson.message) {\n        throw new InvalidMessageFieldError(\"Executable response must contain a 'message' field when unsuccessful.\");\n      }\n      this.errorCode = responseJson.code;\n      this.errorMessage = responseJson.message;\n    }\n  }\n  /**\n   * @return A boolean representing if the response has a valid token. Returns\n   * true when the response was successful and the token is not expired.\n   */\n  isValid() {\n    return !this.isExpired() && this.success;\n  }\n  /**\n   * @return A boolean representing if the response is expired. Returns true if the\n   * provided timeout has passed.\n   */\n  isExpired() {\n    return this.expirationTime !== undefined && this.expirationTime < Math.round(Date.now() / 1000);\n  }\n}\nexports.ExecutableResponse = ExecutableResponse;\n/**\n * An error thrown by the ExecutableResponse class.\n */\nclass ExecutableResponseError extends Error {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexports.ExecutableResponseError = ExecutableResponseError;\n/**\n * An error thrown when the 'version' field in an executable response is missing or invalid.\n */\nclass InvalidVersionFieldError extends ExecutableResponseError {}\nexports.InvalidVersionFieldError = InvalidVersionFieldError;\n/**\n * An error thrown when the 'success' field in an executable response is missing or invalid.\n */\nclass InvalidSuccessFieldError extends ExecutableResponseError {}\nexports.InvalidSuccessFieldError = InvalidSuccessFieldError;\n/**\n * An error thrown when the 'expiration_time' field in an executable response is missing or invalid.\n */\nclass InvalidExpirationTimeFieldError extends ExecutableResponseError {}\nexports.InvalidExpirationTimeFieldError = InvalidExpirationTimeFieldError;\n/**\n * An error thrown when the 'token_type' field in an executable response is missing or invalid.\n */\nclass InvalidTokenTypeFieldError extends ExecutableResponseError {}\nexports.InvalidTokenTypeFieldError = InvalidTokenTypeFieldError;\n/**\n * An error thrown when the 'code' field in an executable response is missing or invalid.\n */\nclass InvalidCodeFieldError extends ExecutableResponseError {}\nexports.InvalidCodeFieldError = InvalidCodeFieldError;\n/**\n * An error thrown when the 'message' field in an executable response is missing or invalid.\n */\nclass InvalidMessageFieldError extends ExecutableResponseError {}\nexports.InvalidMessageFieldError = InvalidMessageFieldError;\n/**\n * An error thrown when the subject token in an executable response is missing or invalid.\n */\nclass InvalidSubjectTokenError extends ExecutableResponseError {}\nexports.InvalidSubjectTokenError = InvalidSubjectTokenError;","map":{"version":3,"names":["Object","defineProperty","exports","value","InvalidSubjectTokenError","InvalidMessageFieldError","InvalidCodeFieldError","InvalidTokenTypeFieldError","InvalidExpirationTimeFieldError","InvalidSuccessFieldError","InvalidVersionFieldError","ExecutableResponseError","ExecutableResponse","SAML_SUBJECT_TOKEN_TYPE","OIDC_SUBJECT_TOKEN_TYPE1","OIDC_SUBJECT_TOKEN_TYPE2","constructor","responseJson","version","success","undefined","expirationTime","expiration_time","tokenType","token_type","saml_response","subjectToken","id_token","code","message","errorCode","errorMessage","isValid","isExpired","Math","round","Date","now","Error","setPrototypeOf","new","target","prototype"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/google-auth-library/build/src/auth/executable-response.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidSubjectTokenError = exports.InvalidMessageFieldError = exports.InvalidCodeFieldError = exports.InvalidTokenTypeFieldError = exports.InvalidExpirationTimeFieldError = exports.InvalidSuccessFieldError = exports.InvalidVersionFieldError = exports.ExecutableResponseError = exports.ExecutableResponse = void 0;\nconst SAML_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:saml2';\nconst OIDC_SUBJECT_TOKEN_TYPE1 = 'urn:ietf:params:oauth:token-type:id_token';\nconst OIDC_SUBJECT_TOKEN_TYPE2 = 'urn:ietf:params:oauth:token-type:jwt';\n/**\n * Defines the response of a 3rd party executable run by the pluggable auth client.\n */\nclass ExecutableResponse {\n    /**\n     * Instantiates an ExecutableResponse instance using the provided JSON object\n     * from the output of the executable.\n     * @param responseJson Response from a 3rd party executable, loaded from a\n     * run of the executable or a cached output file.\n     */\n    constructor(responseJson) {\n        // Check that the required fields exist in the json response.\n        if (!responseJson.version) {\n            throw new InvalidVersionFieldError(\"Executable response must contain a 'version' field.\");\n        }\n        if (responseJson.success === undefined) {\n            throw new InvalidSuccessFieldError(\"Executable response must contain a 'success' field.\");\n        }\n        this.version = responseJson.version;\n        this.success = responseJson.success;\n        // Validate required fields for a successful response.\n        if (this.success) {\n            this.expirationTime = responseJson.expiration_time;\n            this.tokenType = responseJson.token_type;\n            // Validate token type field.\n            if (this.tokenType !== SAML_SUBJECT_TOKEN_TYPE &&\n                this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE1 &&\n                this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE2) {\n                throw new InvalidTokenTypeFieldError(\"Executable response must contain a 'token_type' field when successful \" +\n                    `and it must be one of ${OIDC_SUBJECT_TOKEN_TYPE1}, ${OIDC_SUBJECT_TOKEN_TYPE2}, or ${SAML_SUBJECT_TOKEN_TYPE}.`);\n            }\n            // Validate subject token.\n            if (this.tokenType === SAML_SUBJECT_TOKEN_TYPE) {\n                if (!responseJson.saml_response) {\n                    throw new InvalidSubjectTokenError(`Executable response must contain a 'saml_response' field when token_type=${SAML_SUBJECT_TOKEN_TYPE}.`);\n                }\n                this.subjectToken = responseJson.saml_response;\n            }\n            else {\n                if (!responseJson.id_token) {\n                    throw new InvalidSubjectTokenError(\"Executable response must contain a 'id_token' field when \" +\n                        `token_type=${OIDC_SUBJECT_TOKEN_TYPE1} or ${OIDC_SUBJECT_TOKEN_TYPE2}.`);\n                }\n                this.subjectToken = responseJson.id_token;\n            }\n        }\n        else {\n            // Both code and message must be provided for unsuccessful responses.\n            if (!responseJson.code) {\n                throw new InvalidCodeFieldError(\"Executable response must contain a 'code' field when unsuccessful.\");\n            }\n            if (!responseJson.message) {\n                throw new InvalidMessageFieldError(\"Executable response must contain a 'message' field when unsuccessful.\");\n            }\n            this.errorCode = responseJson.code;\n            this.errorMessage = responseJson.message;\n        }\n    }\n    /**\n     * @return A boolean representing if the response has a valid token. Returns\n     * true when the response was successful and the token is not expired.\n     */\n    isValid() {\n        return !this.isExpired() && this.success;\n    }\n    /**\n     * @return A boolean representing if the response is expired. Returns true if the\n     * provided timeout has passed.\n     */\n    isExpired() {\n        return (this.expirationTime !== undefined &&\n            this.expirationTime < Math.round(Date.now() / 1000));\n    }\n}\nexports.ExecutableResponse = ExecutableResponse;\n/**\n * An error thrown by the ExecutableResponse class.\n */\nclass ExecutableResponseError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ExecutableResponseError = ExecutableResponseError;\n/**\n * An error thrown when the 'version' field in an executable response is missing or invalid.\n */\nclass InvalidVersionFieldError extends ExecutableResponseError {\n}\nexports.InvalidVersionFieldError = InvalidVersionFieldError;\n/**\n * An error thrown when the 'success' field in an executable response is missing or invalid.\n */\nclass InvalidSuccessFieldError extends ExecutableResponseError {\n}\nexports.InvalidSuccessFieldError = InvalidSuccessFieldError;\n/**\n * An error thrown when the 'expiration_time' field in an executable response is missing or invalid.\n */\nclass InvalidExpirationTimeFieldError extends ExecutableResponseError {\n}\nexports.InvalidExpirationTimeFieldError = InvalidExpirationTimeFieldError;\n/**\n * An error thrown when the 'token_type' field in an executable response is missing or invalid.\n */\nclass InvalidTokenTypeFieldError extends ExecutableResponseError {\n}\nexports.InvalidTokenTypeFieldError = InvalidTokenTypeFieldError;\n/**\n * An error thrown when the 'code' field in an executable response is missing or invalid.\n */\nclass InvalidCodeFieldError extends ExecutableResponseError {\n}\nexports.InvalidCodeFieldError = InvalidCodeFieldError;\n/**\n * An error thrown when the 'message' field in an executable response is missing or invalid.\n */\nclass InvalidMessageFieldError extends ExecutableResponseError {\n}\nexports.InvalidMessageFieldError = InvalidMessageFieldError;\n/**\n * An error thrown when the subject token in an executable response is missing or invalid.\n */\nclass InvalidSubjectTokenError extends ExecutableResponseError {\n}\nexports.InvalidSubjectTokenError = InvalidSubjectTokenError;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}