{"ast":null,"code":"\"use strict\";\n\n// Copyright 2012 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthClient = exports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS = exports.DEFAULT_UNIVERSE = void 0;\nconst events_1 = require(\"events\");\nconst gaxios_1 = require(\"gaxios\");\nconst transporters_1 = require(\"../transporters\");\nconst util_1 = require(\"../util\");\n/**\n * The default cloud universe\n *\n * @see {@link AuthJSONOptions.universe_domain}\n */\nexports.DEFAULT_UNIVERSE = 'googleapis.com';\n/**\n * The default {@link AuthClientOptions.eagerRefreshThresholdMillis}\n */\nexports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS = 5 * 60 * 1000;\nclass AuthClient extends events_1.EventEmitter {\n  constructor(opts = {}) {\n    var _a, _b, _c, _d, _e;\n    super();\n    this.credentials = {};\n    this.eagerRefreshThresholdMillis = exports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS;\n    this.forceRefreshOnFailure = false;\n    this.universeDomain = exports.DEFAULT_UNIVERSE;\n    const options = (0, util_1.originalOrCamelOptions)(opts);\n    // Shared auth options\n    this.projectId = (_a = options.get('project_id')) !== null && _a !== void 0 ? _a : null;\n    this.quotaProjectId = options.get('quota_project_id');\n    this.credentials = (_b = options.get('credentials')) !== null && _b !== void 0 ? _b : {};\n    this.universeDomain = (_c = options.get('universe_domain')) !== null && _c !== void 0 ? _c : exports.DEFAULT_UNIVERSE;\n    // Shared client options\n    this.transporter = (_d = opts.transporter) !== null && _d !== void 0 ? _d : new transporters_1.DefaultTransporter();\n    if (opts.transporterOptions) {\n      this.transporter.defaults = opts.transporterOptions;\n    }\n    if (opts.eagerRefreshThresholdMillis) {\n      this.eagerRefreshThresholdMillis = opts.eagerRefreshThresholdMillis;\n    }\n    this.forceRefreshOnFailure = (_e = opts.forceRefreshOnFailure) !== null && _e !== void 0 ? _e : false;\n  }\n  /**\n   * Return the {@link Gaxios `Gaxios`} instance from the {@link AuthClient.transporter}.\n   *\n   * @expiremental\n   */\n  get gaxios() {\n    if (this.transporter instanceof gaxios_1.Gaxios) {\n      return this.transporter;\n    } else if (this.transporter instanceof transporters_1.DefaultTransporter) {\n      return this.transporter.instance;\n    } else if ('instance' in this.transporter && this.transporter.instance instanceof gaxios_1.Gaxios) {\n      return this.transporter.instance;\n    }\n    return null;\n  }\n  /**\n   * Sets the auth credentials.\n   */\n  setCredentials(credentials) {\n    this.credentials = credentials;\n  }\n  /**\n   * Append additional headers, e.g., x-goog-user-project, shared across the\n   * classes inheriting AuthClient. This method should be used by any method\n   * that overrides getRequestMetadataAsync(), which is a shared helper for\n   * setting request information in both gRPC and HTTP API calls.\n   *\n   * @param headers object to append additional headers to.\n   */\n  addSharedMetadataHeaders(headers) {\n    // quota_project_id, stored in application_default_credentials.json, is set in\n    // the x-goog-user-project header, to indicate an alternate account for\n    // billing and quota:\n    if (!headers['x-goog-user-project'] &&\n    // don't override a value the user sets.\n    this.quotaProjectId) {\n      headers['x-goog-user-project'] = this.quotaProjectId;\n    }\n    return headers;\n  }\n  /**\n   * Retry config for Auth-related requests.\n   *\n   * @remarks\n   *\n   * This is not a part of the default {@link AuthClient.transporter transporter/gaxios}\n   * config as some downstream APIs would prefer if customers explicitly enable retries,\n   * such as GCS.\n   */\n  static get RETRY_CONFIG() {\n    return {\n      retry: true,\n      retryConfig: {\n        httpMethodsToRetry: ['GET', 'PUT', 'POST', 'HEAD', 'OPTIONS', 'DELETE']\n      }\n    };\n  }\n}\nexports.AuthClient = AuthClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","AuthClient","DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS","DEFAULT_UNIVERSE","events_1","require","gaxios_1","transporters_1","util_1","EventEmitter","constructor","opts","_a","_b","_c","_d","_e","credentials","eagerRefreshThresholdMillis","forceRefreshOnFailure","universeDomain","options","originalOrCamelOptions","projectId","get","quotaProjectId","transporter","DefaultTransporter","transporterOptions","defaults","gaxios","Gaxios","instance","setCredentials","addSharedMetadataHeaders","headers","RETRY_CONFIG","retry","retryConfig","httpMethodsToRetry"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/google-auth-library/build/src/auth/authclient.js"],"sourcesContent":["\"use strict\";\n// Copyright 2012 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthClient = exports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS = exports.DEFAULT_UNIVERSE = void 0;\nconst events_1 = require(\"events\");\nconst gaxios_1 = require(\"gaxios\");\nconst transporters_1 = require(\"../transporters\");\nconst util_1 = require(\"../util\");\n/**\n * The default cloud universe\n *\n * @see {@link AuthJSONOptions.universe_domain}\n */\nexports.DEFAULT_UNIVERSE = 'googleapis.com';\n/**\n * The default {@link AuthClientOptions.eagerRefreshThresholdMillis}\n */\nexports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS = 5 * 60 * 1000;\nclass AuthClient extends events_1.EventEmitter {\n    constructor(opts = {}) {\n        var _a, _b, _c, _d, _e;\n        super();\n        this.credentials = {};\n        this.eagerRefreshThresholdMillis = exports.DEFAULT_EAGER_REFRESH_THRESHOLD_MILLIS;\n        this.forceRefreshOnFailure = false;\n        this.universeDomain = exports.DEFAULT_UNIVERSE;\n        const options = (0, util_1.originalOrCamelOptions)(opts);\n        // Shared auth options\n        this.projectId = (_a = options.get('project_id')) !== null && _a !== void 0 ? _a : null;\n        this.quotaProjectId = options.get('quota_project_id');\n        this.credentials = (_b = options.get('credentials')) !== null && _b !== void 0 ? _b : {};\n        this.universeDomain = (_c = options.get('universe_domain')) !== null && _c !== void 0 ? _c : exports.DEFAULT_UNIVERSE;\n        // Shared client options\n        this.transporter = (_d = opts.transporter) !== null && _d !== void 0 ? _d : new transporters_1.DefaultTransporter();\n        if (opts.transporterOptions) {\n            this.transporter.defaults = opts.transporterOptions;\n        }\n        if (opts.eagerRefreshThresholdMillis) {\n            this.eagerRefreshThresholdMillis = opts.eagerRefreshThresholdMillis;\n        }\n        this.forceRefreshOnFailure = (_e = opts.forceRefreshOnFailure) !== null && _e !== void 0 ? _e : false;\n    }\n    /**\n     * Return the {@link Gaxios `Gaxios`} instance from the {@link AuthClient.transporter}.\n     *\n     * @expiremental\n     */\n    get gaxios() {\n        if (this.transporter instanceof gaxios_1.Gaxios) {\n            return this.transporter;\n        }\n        else if (this.transporter instanceof transporters_1.DefaultTransporter) {\n            return this.transporter.instance;\n        }\n        else if ('instance' in this.transporter &&\n            this.transporter.instance instanceof gaxios_1.Gaxios) {\n            return this.transporter.instance;\n        }\n        return null;\n    }\n    /**\n     * Sets the auth credentials.\n     */\n    setCredentials(credentials) {\n        this.credentials = credentials;\n    }\n    /**\n     * Append additional headers, e.g., x-goog-user-project, shared across the\n     * classes inheriting AuthClient. This method should be used by any method\n     * that overrides getRequestMetadataAsync(), which is a shared helper for\n     * setting request information in both gRPC and HTTP API calls.\n     *\n     * @param headers object to append additional headers to.\n     */\n    addSharedMetadataHeaders(headers) {\n        // quota_project_id, stored in application_default_credentials.json, is set in\n        // the x-goog-user-project header, to indicate an alternate account for\n        // billing and quota:\n        if (!headers['x-goog-user-project'] && // don't override a value the user sets.\n            this.quotaProjectId) {\n            headers['x-goog-user-project'] = this.quotaProjectId;\n        }\n        return headers;\n    }\n    /**\n     * Retry config for Auth-related requests.\n     *\n     * @remarks\n     *\n     * This is not a part of the default {@link AuthClient.transporter transporter/gaxios}\n     * config as some downstream APIs would prefer if customers explicitly enable retries,\n     * such as GCS.\n     */\n    static get RETRY_CONFIG() {\n        return {\n            retry: true,\n            retryConfig: {\n                httpMethodsToRetry: ['GET', 'PUT', 'POST', 'HEAD', 'OPTIONS', 'DELETE'],\n            },\n        };\n    }\n}\nexports.AuthClient = AuthClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}