{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _Gaxios_instances, _a, _Gaxios_urlMayUseProxy, _Gaxios_applyRequestInterceptors, _Gaxios_applyResponseInterceptors, _Gaxios_prepareRequest, _Gaxios_proxyAgent, _Gaxios_getProxyAgent;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\nconst stream_1 = require(\"stream\");\nconst uuid_1 = require(\"uuid\");\nconst interceptor_1 = require(\"./interceptor\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    _Gaxios_instances.add(this);\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n    this.interceptors = {\n      request: new interceptor_1.GaxiosInterceptorManager(),\n      response: new interceptor_1.GaxiosInterceptorManager()\n    };\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request(opts = {}) {\n    opts = await __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_prepareRequest).call(this, opts);\n    opts = await __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_applyRequestInterceptors).call(this, opts);\n    return __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_applyResponseInterceptors).call(this, this._request(opts));\n  }\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request(opts = {}) {\n    var _b;\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        if (opts.responseType === 'stream') {\n          let response = '';\n          await new Promise(resolve => {\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('data', chunk => {\n              response += chunk;\n            });\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('end', resolve);\n          });\n          translatedResponse.data = response;\n        }\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e instanceof common_1.GaxiosError ? e : new common_1.GaxiosError(e.message, opts, undefined, e);\n      const {\n        shouldRetry,\n        config\n      } = await (0, retry_1.getRetryConfig)(err);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        // The error's config could be redacted - therefore we only want to\n        // copy the retry state over to the existing config\n        opts.retryConfig = (_b = err.config) === null || _b === void 0 ? void 0 : _b.retryConfig;\n        return this._request(opts);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (_b) {\n            // continue\n          }\n          return data;\n        }\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      case 'text':\n        return res.text();\n      default:\n        return this.getResponseDataFromContentType(res);\n    }\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n  /**\n   * Attempts to parse a response by looking at the Content-Type header.\n   * @param {FetchResponse} response the HTTP response.\n   * @returns {Promise<any>} a promise that resolves to the response data.\n   */\n  async getResponseDataFromContentType(response) {\n    let contentType = response.headers.get('Content-Type');\n    if (contentType === null) {\n      // Maintain existing functionality by calling text()\n      return response.text();\n    }\n    contentType = contentType.toLowerCase();\n    if (contentType.includes('application/json')) {\n      let data = await response.text();\n      try {\n        data = JSON.parse(data);\n      } catch (_b) {\n        // continue\n      }\n      return data;\n    } else if (contentType.match(/^text\\//)) {\n      return response.text();\n    } else {\n      // If the content type is something not easily handled, just return the raw data (blob)\n      return response.blob();\n    }\n  }\n  /**\n   * Creates an async generator that yields the pieces of a multipart/related request body.\n   * This implementation follows the spec: https://www.ietf.org/rfc/rfc2387.txt. However, recursive\n   * multipart/related requests are not currently supported.\n   *\n   * @param {GaxioMultipartOptions[]} multipartOptions the pieces to turn into a multipart/related body.\n   * @param {string} boundary the boundary string to be placed between each part.\n   */\n  async *getMultipartRequest(multipartOptions, boundary) {\n    const finale = `--${boundary}--`;\n    for (const currentPart of multipartOptions) {\n      const partContentType = currentPart.headers['Content-Type'] || 'application/octet-stream';\n      const preamble = `--${boundary}\\r\\nContent-Type: ${partContentType}\\r\\n\\r\\n`;\n      yield preamble;\n      if (typeof currentPart.content === 'string') {\n        yield currentPart.content;\n      } else {\n        yield* currentPart.content;\n      }\n      yield '\\r\\n';\n    }\n    yield finale;\n  }\n}\nexports.Gaxios = Gaxios;\n_a = Gaxios, _Gaxios_instances = new WeakSet(), _Gaxios_urlMayUseProxy = function _Gaxios_urlMayUseProxy(url, noProxy = []) {\n  var _b, _c;\n  const candidate = new url_1.URL(url);\n  const noProxyList = [...noProxy];\n  const noProxyEnvList = ((_c = (_b = process.env.NO_PROXY) !== null && _b !== void 0 ? _b : process.env.no_proxy) === null || _c === void 0 ? void 0 : _c.split(',')) || [];\n  for (const rule of noProxyEnvList) {\n    noProxyList.push(rule.trim());\n  }\n  for (const rule of noProxyList) {\n    // Match regex\n    if (rule instanceof RegExp) {\n      if (rule.test(candidate.toString())) {\n        return false;\n      }\n    }\n    // Match URL\n    else if (rule instanceof url_1.URL) {\n      if (rule.origin === candidate.origin) {\n        return false;\n      }\n    }\n    // Match string regex\n    else if (rule.startsWith('*.') || rule.startsWith('.')) {\n      const cleanedRule = rule.replace(/^\\*\\./, '.');\n      if (candidate.hostname.endsWith(cleanedRule)) {\n        return false;\n      }\n    }\n    // Basic string match\n    else if (rule === candidate.origin || rule === candidate.hostname || rule === candidate.href) {\n      return false;\n    }\n  }\n  return true;\n}, _Gaxios_applyRequestInterceptors =\n/**\n * Applies the request interceptors. The request interceptors are applied after the\n * call to prepareRequest is completed.\n *\n * @param {GaxiosOptions} options The current set of options.\n *\n * @returns {Promise<GaxiosOptions>} Promise that resolves to the set of options or response after interceptors are applied.\n */\nasync function _Gaxios_applyRequestInterceptors(options) {\n  let promiseChain = Promise.resolve(options);\n  for (const interceptor of this.interceptors.request.values()) {\n    if (interceptor) {\n      promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n    }\n  }\n  return promiseChain;\n}, _Gaxios_applyResponseInterceptors =\n/**\n * Applies the response interceptors. The response interceptors are applied after the\n * call to request is made.\n *\n * @param {GaxiosOptions} options The current set of options.\n *\n * @returns {Promise<GaxiosOptions>} Promise that resolves to the set of options or response after interceptors are applied.\n */\nasync function _Gaxios_applyResponseInterceptors(response) {\n  let promiseChain = Promise.resolve(response);\n  for (const interceptor of this.interceptors.response.values()) {\n    if (interceptor) {\n      promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n    }\n  }\n  return promiseChain;\n}, _Gaxios_prepareRequest =\n/**\n * Validates the options, merges them with defaults, and prepare request.\n *\n * @param options The original options passed from the client.\n * @returns Prepared options, ready to make a request\n */\nasync function _Gaxios_prepareRequest(options) {\n  var _b, _c, _d, _e;\n  const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n  if (!opts.url) {\n    throw new Error('URL is required.');\n  }\n  // baseUrl has been deprecated, remove in 2.0\n  const baseUrl = opts.baseUrl || opts.baseURL;\n  if (baseUrl) {\n    opts.url = baseUrl.toString() + opts.url;\n  }\n  opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n  if (opts.params && Object.keys(opts.params).length > 0) {\n    let additionalQueryParams = opts.paramsSerializer(opts.params);\n    if (additionalQueryParams.startsWith('?')) {\n      additionalQueryParams = additionalQueryParams.slice(1);\n    }\n    const prefix = opts.url.toString().includes('?') ? '&' : '?';\n    opts.url = opts.url + prefix + additionalQueryParams;\n  }\n  if (typeof options.maxContentLength === 'number') {\n    opts.size = options.maxContentLength;\n  }\n  if (typeof options.maxRedirects === 'number') {\n    opts.follow = options.maxRedirects;\n  }\n  opts.headers = opts.headers || {};\n  if (opts.multipart === undefined && opts.data) {\n    const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n    if (is_stream_1.default.readable(opts.data)) {\n      opts.body = opts.data;\n    } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n      // Do not attempt to JSON.stringify() a Buffer:\n      opts.body = opts.data;\n      if (!hasHeader(opts, 'Content-Type')) {\n        opts.headers['Content-Type'] = 'application/json';\n      }\n    } else if (typeof opts.data === 'object') {\n      // If www-form-urlencoded content type has been set, but data is\n      // provided as an object, serialize the content using querystring:\n      if (!isFormData) {\n        if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n          opts.body = opts.paramsSerializer(opts.data);\n        } else {\n          // } else if (!(opts.data instanceof FormData)) {\n          if (!hasHeader(opts, 'Content-Type')) {\n            opts.headers['Content-Type'] = 'application/json';\n          }\n          opts.body = JSON.stringify(opts.data);\n        }\n      }\n    } else {\n      opts.body = opts.data;\n    }\n  } else if (opts.multipart && opts.multipart.length > 0) {\n    // note: once the minimum version reaches Node 16,\n    // this can be replaced with randomUUID() function from crypto\n    // and the dependency on UUID removed\n    const boundary = (0, uuid_1.v4)();\n    opts.headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n    const bodyStream = new stream_1.PassThrough();\n    opts.body = bodyStream;\n    (0, stream_1.pipeline)(this.getMultipartRequest(opts.multipart, boundary), bodyStream, () => {});\n  }\n  opts.validateStatus = opts.validateStatus || this.validateStatus;\n  opts.responseType = opts.responseType || 'unknown';\n  if (!opts.headers['Accept'] && opts.responseType === 'json') {\n    opts.headers['Accept'] = 'application/json';\n  }\n  opts.method = opts.method || 'GET';\n  const proxy = opts.proxy || ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.HTTPS_PROXY) || ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.https_proxy) || ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.HTTP_PROXY) || ((_e = process === null || process === void 0 ? void 0 : process.env) === null || _e === void 0 ? void 0 : _e.http_proxy);\n  const urlMayUseProxy = __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_urlMayUseProxy).call(this, opts.url, opts.noProxy);\n  if (opts.agent) {\n    // don't do any of the following options - use the user-provided agent.\n  } else if (proxy && urlMayUseProxy) {\n    const HttpsProxyAgent = await __classPrivateFieldGet(_a, _a, \"m\", _Gaxios_getProxyAgent).call(_a);\n    if (this.agentCache.has(proxy)) {\n      opts.agent = this.agentCache.get(proxy);\n    } else {\n      opts.agent = new HttpsProxyAgent(proxy, {\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(proxy, opts.agent);\n    }\n  } else if (opts.cert && opts.key) {\n    // Configure client for mTLS\n    if (this.agentCache.has(opts.key)) {\n      opts.agent = this.agentCache.get(opts.key);\n    } else {\n      opts.agent = new https_1.Agent({\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(opts.key, opts.agent);\n    }\n  }\n  if (typeof opts.errorRedactor !== 'function' && opts.errorRedactor !== false) {\n    opts.errorRedactor = common_1.defaultErrorRedactor;\n  }\n  return opts;\n}, _Gaxios_getProxyAgent = async function _Gaxios_getProxyAgent() {\n  __classPrivateFieldSet(this, _a, __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent) || (await Promise.resolve().then(() => __importStar(require('https-proxy-agent')))).HttpsProxyAgent, \"f\", _Gaxios_proxyAgent);\n  return __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent);\n};\n/**\n * A cache for the lazily-loaded proxy agent.\n *\n * Should use {@link Gaxios[#getProxyAgent]} to retrieve.\n */\n// using `import` to dynamically import the types here\n_Gaxios_proxyAgent = {\n  value: void 0\n};","map":{"version":3,"names":["extend_1","__importDefault","require","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","common_1","retry_1","stream_1","uuid_1","interceptor_1","fetch","hasFetch","window","default","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","Gaxios","constructor","defaults","agentCache","Map","interceptors","request","GaxiosInterceptorManager","response","opts","__classPrivateFieldGet","_Gaxios_instances","_Gaxios_prepareRequest","call","_Gaxios_applyRequestInterceptors","_Gaxios_applyResponseInterceptors","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","url","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","responseType","Promise","resolve","on","chunk","GaxiosError","e","err","message","shouldRetry","config","getRetryConfig","retryConfig","currentRetryAttempt","_b","body","text","JSON","parse","arrayBuffer","blob","getResponseDataFromContentType","paramsSerializer","params","stringify","forEach","value","statusText","responseURL","contentType","get","includes","match","getMultipartRequest","multipartOptions","boundary","finale","currentPart","partContentType","preamble","content","exports","noProxy","candidate","URL","noProxyList","noProxyEnvList","_c","process","env","NO_PROXY","no_proxy","split","rule","push","trim","RegExp","test","toString","origin","startsWith","cleanedRule","replace","hostname","endsWith","href","promiseChain","interceptor","values","then","resolved","rejected","Error","baseUrl","baseURL","length","additionalQueryParams","slice","prefix","maxContentLength","size","maxRedirects","follow","multipart","isFormData","FormData","readable","isBuffer","v4","bodyStream","PassThrough","pipeline","method","proxy","HTTPS_PROXY","https_proxy","_d","HTTP_PROXY","_e","http_proxy","urlMayUseProxy","_Gaxios_urlMayUseProxy","agent","HttpsProxyAgent","_a","_Gaxios_getProxyAgent","has","cert","set","Agent","errorRedactor","defaultErrorRedactor","__classPrivateFieldSet","_Gaxios_proxyAgent","__importStar"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAAA,QAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAH,eAAA,CAAAC,OAAA;AACA,MAAAG,aAAA,GAAAJ,eAAA,CAAAC,OAAA;AACA,MAAAI,WAAA,GAAAL,eAAA,CAAAC,OAAA;AACA,MAAAK,KAAA,GAAAL,OAAA;AAEA,MAAAM,QAAA,GAAAN,OAAA;AAUA,MAAAO,OAAA,GAAAP,OAAA;AACA,MAAAQ,QAAA,GAAAR,OAAA;AACA,MAAAS,MAAA,GAAAT,OAAA;AACA,MAAAU,aAAA,GAAAV,OAAA;AAEA;AAEA,MAAMW,KAAK,GAAGC,QAAQ,EAAE,GAAGC,MAAM,CAACF,KAAK,GAAGT,YAAA,CAAAY,OAAS;AAEnD,SAASC,SAASA,CAAA;EAChB,OAAO,OAAOF,MAAM,KAAK,WAAW,IAAI,CAAC,CAACA,MAAM;AAClD;AAEA,SAASD,QAAQA,CAAA;EACf,OAAOG,SAAS,EAAE,IAAI,CAAC,CAACF,MAAM,CAACF,KAAK;AACtC;AAEA,SAASK,SAASA,CAAA;EAChB,OAAO,OAAOC,MAAM,KAAK,WAAW;AACtC;AAEA,SAASC,SAASA,CAACC,OAAsB,EAAEC,MAAc;EACvD,OAAO,CAAC,CAACC,SAAS,CAACF,OAAO,EAAEC,MAAM,CAAC;AACrC;AAEA,SAASC,SAASA,CAACF,OAAsB,EAAEC,MAAc;EACvDA,MAAM,GAAGA,MAAM,CAACE,WAAW,EAAE;EAC7B,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAAC,CAAAN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,OAAO,KAAI,EAAE,CAAC,EAAE;IACrD,IAAIN,MAAM,KAAKG,GAAG,CAACD,WAAW,EAAE,EAAE;MAChC,OAAOH,OAAO,CAACO,OAAQ,CAACH,GAAG,CAAC;IAC9B;EACF;EACA,OAAOI,SAAS;AAClB;AAEA,MAAaC,MAAM;EAmBjB;;;;EAIAC,YAAYC,QAAwB;;IAtB1B,KAAAC,UAAU,GAAG,IAAIC,GAAG,EAG3B;IAoBD,IAAI,CAACF,QAAQ,GAAGA,QAAQ,IAAI,EAAE;IAC9B,IAAI,CAACG,YAAY,GAAG;MAClBC,OAAO,EAAE,IAAIxB,aAAA,CAAAyB,wBAAwB,EAAE;MACvCC,QAAQ,EAAE,IAAI1B,aAAA,CAAAyB,wBAAwB;KACvC;EACH;EAEA;;;;EAIA,MAAMD,OAAOA,CAAUG,IAAA,GAAsB,EAAE;IAC7CA,IAAI,GAAG,MAAMC,sBAAA,KAAI,EAAAC,iBAAA,OAAAC,sBAAA,CAAgB,CAAAC,IAAA,CAApB,IAAI,EAAiBJ,IAAI,CAAC;IACvCA,IAAI,GAAG,MAAMC,sBAAA,KAAI,EAAAC,iBAAA,OAAAG,gCAAA,CAA0B,CAAAD,IAAA,CAA9B,IAAI,EAA2BJ,IAAI,CAAC;IACjD,OAAOC,sBAAA,KAAI,EAAAC,iBAAA,OAAAI,iCAAA,CAA2B,CAAAF,IAAA,CAA/B,IAAI,EAA4B,IAAI,CAACG,QAAQ,CAACP,IAAI,CAAC,CAAC;EAC7D;EAEQ,MAAMQ,eAAeA,CAC3BR,IAAmB;IAEnB,MAAMS,SAAS,GAAGT,IAAI,CAACU,mBAAmB,IAAIpC,KAAK;IACnD,MAAMqC,GAAG,GAAI,MAAMF,SAAS,CAACT,IAAI,CAACY,GAAG,EAAEZ,IAAI,CAAmB;IAC9D,MAAMa,IAAI,GAAG,MAAM,IAAI,CAACC,eAAe,CAACd,IAAI,EAAEW,GAAG,CAAC;IAClD,OAAO,IAAI,CAACI,iBAAiB,CAAIf,IAAI,EAAEW,GAAG,EAAEE,IAAI,CAAC;EACnD;EAEA;;;;EAIU,MAAMN,QAAQA,CACtBP,IAAA,GAAsB,EAAE;;IAExB,IAAI;MACF,IAAIgB,kBAAqC;MACzC,IAAIhB,IAAI,CAACiB,OAAO,EAAE;QAChBD,kBAAkB,GAAG,MAAMhB,IAAI,CAACiB,OAAO,CACrCjB,IAAI,EACJ,IAAI,CAACQ,eAAe,CAACU,IAAI,CAAC,IAAI,CAAC,CAChC;MACH,CAAC,MAAM;QACLF,kBAAkB,GAAG,MAAM,IAAI,CAACR,eAAe,CAACR,IAAI,CAAC;MACvD;MAEA,IAAI,CAACA,IAAI,CAACmB,cAAe,CAACH,kBAAkB,CAACI,MAAM,CAAC,EAAE;QACpD,IAAIpB,IAAI,CAACqB,YAAY,KAAK,QAAQ,EAAE;UAClC,IAAItB,QAAQ,GAAG,EAAE;UACjB,MAAM,IAAIuB,OAAO,CAACC,OAAO,IAAG;YAC1B,CAACP,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEH,IAAe,EAACW,EAAE,CAAC,MAAM,EAAEC,KAAK,IAAG;cACtD1B,QAAQ,IAAI0B,KAAK;YACnB,CAAC,CAAC;YACF,CAACT,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEH,IAAe,EAACW,EAAE,CAAC,KAAK,EAAED,OAAO,CAAC;UACzD,CAAC,CAAC;UACFP,kBAAkB,CAACH,IAAI,GAAGd,QAAa;QACzC;QACA,MAAM,IAAI9B,QAAA,CAAAyD,WAAW,CACnB,mCAAmCV,kBAAkB,CAACI,MAAM,EAAE,EAC9DpB,IAAI,EACJgB,kBAAkB,CACnB;MACH;MACA,OAAOA,kBAAkB;IAC3B,CAAC,CAAC,OAAOW,CAAC,EAAE;MACV,MAAMC,GAAG,GACPD,CAAC,YAAY1D,QAAA,CAAAyD,WAAW,GACpBC,CAAC,GACD,IAAI1D,QAAA,CAAAyD,WAAW,CAAEC,CAAW,CAACE,OAAO,EAAE7B,IAAI,EAAEV,SAAS,EAAEqC,CAAU,CAAC;MAExE,MAAM;QAACG,WAAW;QAAEC;MAAM,CAAC,GAAG,MAAM,IAAA7D,OAAA,CAAA8D,cAAc,EAACJ,GAAG,CAAC;MACvD,IAAIE,WAAW,IAAIC,MAAM,EAAE;QACzBH,GAAG,CAACG,MAAM,CAACE,WAAY,CAACC,mBAAmB,GACzCH,MAAM,CAACE,WAAY,CAACC,mBAAmB;QAEzC;QACA;QACAlC,IAAI,CAACiC,WAAW,GAAG,CAAAE,EAAA,GAAAP,GAAG,CAACG,MAAM,cAAAI,EAAA,uBAAAA,EAAA,CAAEF,WAAW;QAE1C,OAAO,IAAI,CAAC1B,QAAQ,CAAIP,IAAI,CAAC;MAC/B;MACA,MAAM4B,GAAG;IACX;EACF;EAEQ,MAAMd,eAAeA,CAC3Bd,IAAmB,EACnBW,GAAkB;IAElB,QAAQX,IAAI,CAACqB,YAAY;MACvB,KAAK,QAAQ;QACX,OAAOV,GAAG,CAACyB,IAAI;MACjB,KAAK,MAAM;QAAE;UACX,IAAIvB,IAAI,GAAG,MAAMF,GAAG,CAAC0B,IAAI,EAAE;UAC3B,IAAI;YACFxB,IAAI,GAAGyB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAAC;UACzB,CAAC,CAAC,OAAAsB,EAAA,EAAM;YACN;UAAA;UAEF,OAAOtB,IAAU;QACnB;MACA,KAAK,aAAa;QAChB,OAAOF,GAAG,CAAC6B,WAAW,EAAE;MAC1B,KAAK,MAAM;QACT,OAAO7B,GAAG,CAAC8B,IAAI,EAAE;MACnB,KAAK,MAAM;QACT,OAAO9B,GAAG,CAAC0B,IAAI,EAAE;MACnB;QACE,OAAO,IAAI,CAACK,8BAA8B,CAAC/B,GAAG,CAAC;IACnD;EACF;EA4OA;;;;EAIQQ,cAAcA,CAACC,MAAc;IACnC,OAAOA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG;EACtC;EAEA;;;;EAIQuB,gBAAgBA,CAACC,MAA0C;IACjE,OAAO9E,aAAA,CAAAW,OAAE,CAACoE,SAAS,CAACD,MAAM,CAAC;EAC7B;EAEQ7B,iBAAiBA,CACvBf,IAAmB,EACnBW,GAAkB,EAClBE,IAAQ;IAER;IACA,MAAMxB,OAAO,GAAG,EAAa;IAC7BsB,GAAG,CAACtB,OAAO,CAACyD,OAAO,CAAC,CAACC,KAAK,EAAE7D,GAAG,KAAI;MACjCG,OAAO,CAACH,GAAG,CAAC,GAAG6D,KAAK;IACtB,CAAC,CAAC;IAEF,OAAO;MACLhB,MAAM,EAAE/B,IAAI;MACZa,IAAI,EAAEA,IAAS;MACfxB,OAAO;MACP+B,MAAM,EAAET,GAAG,CAACS,MAAM;MAClB4B,UAAU,EAAErC,GAAG,CAACqC,UAAU;MAE1B;MACAnD,OAAO,EAAE;QACPoD,WAAW,EAAEtC,GAAG,CAACC;;KAEpB;EACH;EAEA;;;;;EAKQ,MAAM8B,8BAA8BA,CAC1C3C,QAAuB;IAEvB,IAAImD,WAAW,GAAGnD,QAAQ,CAACV,OAAO,CAAC8D,GAAG,CAAC,cAAc,CAAC;IACtD,IAAID,WAAW,KAAK,IAAI,EAAE;MACxB;MACA,OAAOnD,QAAQ,CAACsC,IAAI,EAAE;IACxB;IACAa,WAAW,GAAGA,WAAW,CAACjE,WAAW,EAAE;IACvC,IAAIiE,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MAC5C,IAAIvC,IAAI,GAAG,MAAMd,QAAQ,CAACsC,IAAI,EAAE;MAChC,IAAI;QACFxB,IAAI,GAAGyB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAAC;MACzB,CAAC,CAAC,OAAAsB,EAAA,EAAM;QACN;MAAA;MAEF,OAAOtB,IAAU;IACnB,CAAC,MAAM,IAAIqC,WAAW,CAACG,KAAK,CAAC,SAAS,CAAC,EAAE;MACvC,OAAOtD,QAAQ,CAACsC,IAAI,EAAE;IACxB,CAAC,MAAM;MACL;MACA,OAAOtC,QAAQ,CAAC0C,IAAI,EAAE;IACxB;EACF;EAEA;;;;;;;;EAQQ,OAAOa,mBAAmBA,CAChCC,gBAA0C,EAC1CC,QAAgB;IAEhB,MAAMC,MAAM,GAAG,KAAKD,QAAQ,IAAI;IAChC,KAAK,MAAME,WAAW,IAAIH,gBAAgB,EAAE;MAC1C,MAAMI,eAAe,GACnBD,WAAW,CAACrE,OAAO,CAAC,cAAc,CAAC,IAAI,0BAA0B;MACnE,MAAMuE,QAAQ,GAAG,KAAKJ,QAAQ,qBAAqBG,eAAe,UAAU;MAC5E,MAAMC,QAAQ;MACd,IAAI,OAAOF,WAAW,CAACG,OAAO,KAAK,QAAQ,EAAE;QAC3C,MAAMH,WAAW,CAACG,OAAO;MAC3B,CAAC,MAAM;QACL,OAAOH,WAAW,CAACG,OAAO;MAC5B;MACA,MAAM,MAAM;IACd;IACA,MAAMJ,MAAM;EACd;;AAjdFK,OAAA,CAAAvE,MAAA,GAAAA,MAAA;yGAuIIqB,GAAiB,EACjBmD,OAAA,GAAoC,EAAE;;EAEtC,MAAMC,SAAS,GAAG,IAAIhG,KAAA,CAAAiG,GAAG,CAACrD,GAAG,CAAC;EAC9B,MAAMsD,WAAW,GAAG,CAAC,GAAGH,OAAO,CAAC;EAChC,MAAMI,cAAc,GAClB,EAAAC,EAAA,GAAC,CAAAjC,EAAA,GAAAkC,OAAO,CAACC,GAAG,CAACC,QAAQ,cAAApC,EAAA,cAAAA,EAAA,GAAIkC,OAAO,CAACC,GAAG,CAACE,QAAS,cAAAJ,EAAA,uBAAAA,EAAA,CAAEK,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE;EAElE,KAAK,MAAMC,IAAI,IAAIP,cAAc,EAAE;IACjCD,WAAW,CAACS,IAAI,CAACD,IAAI,CAACE,IAAI,EAAE,CAAC;EAC/B;EAEA,KAAK,MAAMF,IAAI,IAAIR,WAAW,EAAE;IAC9B;IACA,IAAIQ,IAAI,YAAYG,MAAM,EAAE;MAC1B,IAAIH,IAAI,CAACI,IAAI,CAACd,SAAS,CAACe,QAAQ,EAAE,CAAC,EAAE;QACnC,OAAO,KAAK;MACd;IACF;IACA;IAAA,KACK,IAAIL,IAAI,YAAY1G,KAAA,CAAAiG,GAAG,EAAE;MAC5B,IAAIS,IAAI,CAACM,MAAM,KAAKhB,SAAS,CAACgB,MAAM,EAAE;QACpC,OAAO,KAAK;MACd;IACF;IACA;IAAA,KACK,IAAIN,IAAI,CAACO,UAAU,CAAC,IAAI,CAAC,IAAIP,IAAI,CAACO,UAAU,CAAC,GAAG,CAAC,EAAE;MACtD,MAAMC,WAAW,GAAGR,IAAI,CAACS,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;MAC9C,IAAInB,SAAS,CAACoB,QAAQ,CAACC,QAAQ,CAACH,WAAW,CAAC,EAAE;QAC5C,OAAO,KAAK;MACd;IACF;IACA;IAAA,KACK,IACHR,IAAI,KAAKV,SAAS,CAACgB,MAAM,IACzBN,IAAI,KAAKV,SAAS,CAACoB,QAAQ,IAC3BV,IAAI,KAAKV,SAAS,CAACsB,IAAI,EACvB;MACA,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb,CAAC,EAAAjF,gCAAA;AAED;;;;;;;;AAQA,eAAKA,iCACHvB,OAAsB;EAEtB,IAAIyG,YAAY,GAAGjE,OAAO,CAACC,OAAO,CAACzC,OAAO,CAAC;EAE3C,KAAK,MAAM0G,WAAW,IAAI,IAAI,CAAC5F,YAAY,CAACC,OAAO,CAAC4F,MAAM,EAAE,EAAE;IAC5D,IAAID,WAAW,EAAE;MACfD,YAAY,GAAGA,YAAY,CAACG,IAAI,CAC9BF,WAAW,CAACG,QAAQ,EACpBH,WAAW,CAACI,QAAQ,CACK;IAC7B;EACF;EAEA,OAAOL,YAAY;AACrB,CAAC,EAAAjF,iCAAA;AAED;;;;;;;;AAQA,eAAKA,kCACHP,QAAkD;EAElD,IAAIwF,YAAY,GAAGjE,OAAO,CAACC,OAAO,CAACxB,QAAQ,CAAC;EAE5C,KAAK,MAAMyF,WAAW,IAAI,IAAI,CAAC5F,YAAY,CAACG,QAAQ,CAAC0F,MAAM,EAAE,EAAE;IAC7D,IAAID,WAAW,EAAE;MACfD,YAAY,GAAGA,YAAY,CAACG,IAAI,CAC9BF,WAAW,CAACG,QAAQ,EACpBH,WAAW,CAACI,QAAQ,CACM;IAC9B;EACF;EAEA,OAAOL,YAAY;AACrB,CAAC,EAAApF,sBAAA;AAED;;;;;;AAMA,eAAKA,uBAAiBrB,OAAsB;;EAC1C,MAAMkB,IAAI,GAAG,IAAAvC,QAAA,CAAAgB,OAAM,EAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAACgB,QAAQ,EAAEX,OAAO,CAAC;EACrD,IAAI,CAACkB,IAAI,CAACY,GAAG,EAAE;IACb,MAAM,IAAIiF,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA;EACA,MAAMC,OAAO,GAAG9F,IAAI,CAAC8F,OAAO,IAAI9F,IAAI,CAAC+F,OAAO;EAC5C,IAAID,OAAO,EAAE;IACX9F,IAAI,CAACY,GAAG,GAAGkF,OAAO,CAACf,QAAQ,EAAE,GAAG/E,IAAI,CAACY,GAAG;EAC1C;EAEAZ,IAAI,CAAC2C,gBAAgB,GAAG3C,IAAI,CAAC2C,gBAAgB,IAAI,IAAI,CAACA,gBAAgB;EACtE,IAAI3C,IAAI,CAAC4C,MAAM,IAAIzD,MAAM,CAACC,IAAI,CAACY,IAAI,CAAC4C,MAAM,CAAC,CAACoD,MAAM,GAAG,CAAC,EAAE;IACtD,IAAIC,qBAAqB,GAAGjG,IAAI,CAAC2C,gBAAgB,CAAC3C,IAAI,CAAC4C,MAAM,CAAC;IAC9D,IAAIqD,qBAAqB,CAAChB,UAAU,CAAC,GAAG,CAAC,EAAE;MACzCgB,qBAAqB,GAAGA,qBAAqB,CAACC,KAAK,CAAC,CAAC,CAAC;IACxD;IACA,MAAMC,MAAM,GAAGnG,IAAI,CAACY,GAAG,CAACmE,QAAQ,EAAE,CAAC3B,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;IAC5DpD,IAAI,CAACY,GAAG,GAAGZ,IAAI,CAACY,GAAG,GAAGuF,MAAM,GAAGF,qBAAqB;EACtD;EAEA,IAAI,OAAOnH,OAAO,CAACsH,gBAAgB,KAAK,QAAQ,EAAE;IAChDpG,IAAI,CAACqG,IAAI,GAAGvH,OAAO,CAACsH,gBAAgB;EACtC;EAEA,IAAI,OAAOtH,OAAO,CAACwH,YAAY,KAAK,QAAQ,EAAE;IAC5CtG,IAAI,CAACuG,MAAM,GAAGzH,OAAO,CAACwH,YAAY;EACpC;EAEAtG,IAAI,CAACX,OAAO,GAAGW,IAAI,CAACX,OAAO,IAAI,EAAE;EACjC,IAAIW,IAAI,CAACwG,SAAS,KAAKlH,SAAS,IAAIU,IAAI,CAACa,IAAI,EAAE;IAC7C,MAAM4F,UAAU,GACd,OAAOC,QAAQ,KAAK,WAAW,GAC3B,KAAK,GACL,CAAA1G,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,aAAY6F,QAAQ;IACpC,IAAI3I,WAAA,CAAAU,OAAQ,CAACkI,QAAQ,CAAC3G,IAAI,CAACa,IAAI,CAAC,EAAE;MAChCb,IAAI,CAACoC,IAAI,GAAGpC,IAAI,CAACa,IAAI;IACvB,CAAC,MAAM,IAAIlC,SAAS,EAAE,IAAIC,MAAM,CAACgI,QAAQ,CAAC5G,IAAI,CAACa,IAAI,CAAC,EAAE;MACpD;MACAb,IAAI,CAACoC,IAAI,GAAGpC,IAAI,CAACa,IAAI;MACrB,IAAI,CAAChC,SAAS,CAACmB,IAAI,EAAE,cAAc,CAAC,EAAE;QACpCA,IAAI,CAACX,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;MACnD;IACF,CAAC,MAAM,IAAI,OAAOW,IAAI,CAACa,IAAI,KAAK,QAAQ,EAAE;MACxC;MACA;MACA,IAAI,CAAC4F,UAAU,EAAE;QACf,IACEzH,SAAS,CAACgB,IAAI,EAAE,cAAc,CAAC,KAC/B,mCAAmC,EACnC;UACAA,IAAI,CAACoC,IAAI,GAAGpC,IAAI,CAAC2C,gBAAgB,CAAC3C,IAAI,CAACa,IAAI,CAAC;QAC9C,CAAC,MAAM;UACL;UACA,IAAI,CAAChC,SAAS,CAACmB,IAAI,EAAE,cAAc,CAAC,EAAE;YACpCA,IAAI,CAACX,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;UACnD;UACAW,IAAI,CAACoC,IAAI,GAAGE,IAAI,CAACO,SAAS,CAAC7C,IAAI,CAACa,IAAI,CAAC;QACvC;MACF;IACF,CAAC,MAAM;MACLb,IAAI,CAACoC,IAAI,GAAGpC,IAAI,CAACa,IAAI;IACvB;EACF,CAAC,MAAM,IAAIb,IAAI,CAACwG,SAAS,IAAIxG,IAAI,CAACwG,SAAS,CAACR,MAAM,GAAG,CAAC,EAAE;IACtD;IACA;IACA;IACA,MAAMxC,QAAQ,GAAG,IAAApF,MAAA,CAAAyI,EAAE,GAAE;IACrB7G,IAAI,CAACX,OAAO,CAAC,cAAc,CAAC,GAAG,+BAA+BmE,QAAQ,EAAE;IACxE,MAAMsD,UAAU,GAAG,IAAI3I,QAAA,CAAA4I,WAAW,EAAE;IACpC/G,IAAI,CAACoC,IAAI,GAAG0E,UAAU;IACtB,IAAA3I,QAAA,CAAA6I,QAAQ,EACN,IAAI,CAAC1D,mBAAmB,CAACtD,IAAI,CAACwG,SAAS,EAAEhD,QAAQ,CAAC,EAClDsD,UAAU,EACV,MAAK,CAAE,CAAC,CACT;EACH;EAEA9G,IAAI,CAACmB,cAAc,GAAGnB,IAAI,CAACmB,cAAc,IAAI,IAAI,CAACA,cAAc;EAChEnB,IAAI,CAACqB,YAAY,GAAGrB,IAAI,CAACqB,YAAY,IAAI,SAAS;EAClD,IAAI,CAACrB,IAAI,CAACX,OAAO,CAAC,QAAQ,CAAC,IAAIW,IAAI,CAACqB,YAAY,KAAK,MAAM,EAAE;IAC3DrB,IAAI,CAACX,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB;EAC7C;EACAW,IAAI,CAACiH,MAAM,GAAGjH,IAAI,CAACiH,MAAM,IAAI,KAAK;EAElC,MAAMC,KAAK,GACTlH,IAAI,CAACkH,KAAK,KACV,CAAA/E,EAAA,GAAAkC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAnC,EAAA,uBAAAA,EAAA,CAAEgF,WAAW,MACzB,CAAA/C,EAAA,GAAAC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAF,EAAA,uBAAAA,EAAA,CAAEgD,WAAW,MACzB,CAAAC,EAAA,GAAAhD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAA+C,EAAA,uBAAAA,EAAA,CAAEC,UAAU,MACxB,CAAAC,EAAA,GAAAlD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAiD,EAAA,uBAAAA,EAAA,CAAEC,UAAU;EAC1B,MAAMC,cAAc,GAAGxH,sBAAA,KAAI,EAAAC,iBAAA,OAAAwH,sBAAA,CAAgB,CAAAtH,IAAA,CAApB,IAAI,EAAiBJ,IAAI,CAACY,GAAG,EAAEZ,IAAI,CAAC+D,OAAO,CAAC;EAEnE,IAAI/D,IAAI,CAAC2H,KAAK,EAAE;IACd;EAAA,CACD,MAAM,IAAIT,KAAK,IAAIO,cAAc,EAAE;IAClC,MAAMG,eAAe,GAAG,MAAM3H,sBAAA,CAAA4H,EAAM,EAAAA,EAAA,OAAAC,qBAAA,CAAe,CAAA1H,IAAA,CAArByH,EAAM,CAAiB;IAErD,IAAI,IAAI,CAACnI,UAAU,CAACqI,GAAG,CAACb,KAAK,CAAC,EAAE;MAC9BlH,IAAI,CAAC2H,KAAK,GAAG,IAAI,CAACjI,UAAU,CAACyD,GAAG,CAAC+D,KAAK,CAAC;IACzC,CAAC,MAAM;MACLlH,IAAI,CAAC2H,KAAK,GAAG,IAAIC,eAAe,CAACV,KAAK,EAAE;QACtCc,IAAI,EAAEhI,IAAI,CAACgI,IAAI;QACf9I,GAAG,EAAEc,IAAI,CAACd;OACX,CAAC;MAEF,IAAI,CAACQ,UAAU,CAACuI,GAAG,CAACf,KAAK,EAAElH,IAAI,CAAC2H,KAAK,CAAC;IACxC;EACF,CAAC,MAAM,IAAI3H,IAAI,CAACgI,IAAI,IAAIhI,IAAI,CAACd,GAAG,EAAE;IAChC;IACA,IAAI,IAAI,CAACQ,UAAU,CAACqI,GAAG,CAAC/H,IAAI,CAACd,GAAG,CAAC,EAAE;MACjCc,IAAI,CAAC2H,KAAK,GAAG,IAAI,CAACjI,UAAU,CAACyD,GAAG,CAACnD,IAAI,CAACd,GAAG,CAAC;IAC5C,CAAC,MAAM;MACLc,IAAI,CAAC2H,KAAK,GAAG,IAAI/J,OAAA,CAAAsK,KAAU,CAAC;QAC1BF,IAAI,EAAEhI,IAAI,CAACgI,IAAI;QACf9I,GAAG,EAAEc,IAAI,CAACd;OACX,CAAC;MACF,IAAI,CAACQ,UAAU,CAACuI,GAAG,CAACjI,IAAI,CAACd,GAAG,EAAEc,IAAI,CAAC2H,KAAK,CAAC;IAC3C;EACF;EAEA,IACE,OAAO3H,IAAI,CAACmI,aAAa,KAAK,UAAU,IACxCnI,IAAI,CAACmI,aAAa,KAAK,KAAK,EAC5B;IACAnI,IAAI,CAACmI,aAAa,GAAGlK,QAAA,CAAAmK,oBAAoB;EAC3C;EAEA,OAAOpI,IAAI;AACb,CAAC,EAAA8H,qBAAA,GAkHM,eAAKA,sBAAA;EACVO,sBAAA,OAAAR,EAAA,EAAA5H,sBAAA,OAAA4H,EAAA,OAAAS,kBAAA,KAAqB,CAAC,MAAAhH,OAAA,CAAAC,OAAA,GAAAmE,IAAA,OAAA6C,YAAA,CAAA5K,OAAA,CAAa,mBAAmB,GAAC,EAAEiK,eAAe,OAAAU,kBAAA;EAExE,OAAOrI,sBAAA,KAAI,EAAA4H,EAAA,OAAAS,kBAAA,CAAY;AACzB,CAAC;AAjBD;;;;;AAKA;AACOA,kBAAA;EAAAvF,KAAA;AAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}