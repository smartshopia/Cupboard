{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node;\n  var clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng.default)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v1;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_rng","_interopRequireDefault","require","_stringify","e","__esModule","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","offset","i","b","Array","node","clockseq","_v6","seedBytes","random","rng","undefined","msecs","Date","now","nsecs","dt","Error","tl","tmh","n","unsafeStringify","_default"],"sources":["C:/Users/ATTA UR REHMAN/Music/Fida/Cupboard/node_modules/gaxios/node_modules/uuid/dist/commonjs-browser/v1.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node;\n  var clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng.default)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}